{
  "reflection": [
    {
      "type": "[B"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.deser.BeanDeserializerModifier;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.deser.Deserializers;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.deser.KeyDeserializers;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.deser.ValueInstantiators;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.ser.BeanSerializerModifier;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.ser.Serializers;"
    },
    {
      "type": "[Ljava.lang.Class;"
    },
    {
      "type": "[Ljava.lang.Object;"
    },
    {
      "type": "[Ljava.lang.String;"
    },
    {
      "type": "[Ljava.lang.annotation.Annotation;"
    },
    {
      "type": "[Lkotlin.annotation.AnnotationTarget;"
    },
    {
      "type": "[Lorg.springframework.core.annotation.AnnotationAttributes;"
    },
    {
      "type": "[Lorg.springframework.core.annotation.TypeMappedAnnotation;"
    },
    {
      "type": "[Lorg.springframework.util.ConcurrentReferenceHashMap$Segment;"
    },
    {
      "type": "[Z"
    },
    {
      "type": "android.app.Application"
    },
    {
      "type": "apple.security.AppleProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "boolean"
    },
    {
      "type": "ch.qos.logback.classic.BasicConfigurator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.LoggerContext"
    },
    {
      "type": "ch.qos.logback.classic.joran.SerializedModelConfigurator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.spi.LogbackServiceProvider"
    },
    {
      "type": "ch.qos.logback.classic.util.DefaultJoranConfigurator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "co.elastic.clients.elasticsearch.ElasticsearchClient"
    },
    {
      "type": "co.elastic.clients.transport.ElasticsearchTransport"
    },
    {
      "type": "com.aayushatharva.brotli4j.Brotli4jLoader"
    },
    {
      "type": "com.couchbase.client.java.Bucket"
    },
    {
      "type": "com.couchbase.client.java.Cluster"
    },
    {
      "type": "com.datastax.oss.driver.api.core.CqlSession"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JacksonAnnotation"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonSubTypes"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonSubTypes$Type"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonTypeInfo"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonTypeInfo$As"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonTypeInfo$Id"
    },
    {
      "type": "com.fasterxml.jackson.core.JsonGenerator"
    },
    {
      "type": "com.fasterxml.jackson.core.ObjectCodec",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.core.TreeCodec",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.core.Versioned"
    },
    {
      "type": "com.fasterxml.jackson.databind.Module",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.databind.ObjectMapper",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.fasterxml.jackson.databind.module.SimpleModule",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.dataformat.cbor.CBORFactory"
    },
    {
      "type": "com.fasterxml.jackson.dataformat.smile.SmileFactory"
    },
    {
      "type": "com.fasterxml.jackson.dataformat.xml.XmlMapper"
    },
    {
      "type": "com.fasterxml.jackson.dataformat.yaml.YAMLFactory"
    },
    {
      "type": "com.fasterxml.jackson.datatype.jdk8.Jdk8Module",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.fasterxml.jackson.module.kotlin.KotlinModule",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.fasterxml.jackson.module.kotlin.KotlinModule$Builder"
    },
    {
      "type": "com.fasterxml.jackson.module.paramnames.ParameterNamesModule",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.BLCHeader$DrainStatusRef",
      "fields": [
        {
          "name": "drainStatus"
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueueColdProducerFields",
      "fields": [
        {
          "name": "producerLimit"
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueueConsumerFields",
      "fields": [
        {
          "name": "consumerIndex"
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueueProducerFields",
      "fields": [
        {
          "name": "producerIndex"
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.BoundedLocalCache",
      "fields": [
        {
          "name": "refreshes"
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.Cache"
    },
    {
      "type": "com.github.benmanes.caffeine.cache.Caffeine"
    },
    {
      "type": "com.github.benmanes.caffeine.cache.PS",
      "fields": [
        {
          "name": "key"
        },
        {
          "name": "value"
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.PSW",
      "fields": [
        {
          "name": "writeTime"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.SSW",
      "fields": [
        {
          "name": "FACTORY"
        }
      ]
    },
    {
      "type": "com.github.luben.zstd.Zstd"
    },
    {
      "type": "com.google.api.FieldBehavior"
    },
    {
      "type": "com.google.api.client.http.GenericUrl",
      "allDeclaredFields": true
    },
    {
      "type": "com.google.api.client.http.HttpHeaders",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setAccept",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setAcceptEncoding",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setAge",
          "parameterTypes": [
            "java.lang.Long"
          ]
        },
        {
          "name": "setAuthenticate",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setAuthorization",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "setCacheControl",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setContentEncoding",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setContentLength",
          "parameterTypes": [
            "java.lang.Long"
          ]
        },
        {
          "name": "setContentMD5",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setContentRange",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setContentType",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setCookie",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setDate",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setETag",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setExpires",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setIfMatch",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setIfModifiedSince",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setIfNoneMatch",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setIfRange",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setIfUnmodifiedSince",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setLastModified",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setLocation",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setMimeVersion",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setRange",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setRetryAfter",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setUserAgent",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.google.api.client.json.GenericJson",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.google.api.client.util.GenericData",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.google.api.core.BetaApi"
    },
    {
      "type": "com.google.api.core.InternalApi"
    },
    {
      "type": "com.google.api.core.InternalExtensionOnly"
    },
    {
      "type": "com.google.api.core.ObsoleteApi"
    },
    {
      "type": "com.google.auth.appengine.AppEngineCredentials"
    },
    {
      "type": "com.google.auth.oauth2.GoogleCredentials"
    },
    {
      "type": "com.google.auth.oauth2.ServiceAccountCredentials"
    },
    {
      "type": "com.google.auth.oauth2.ServiceAccountJwtAccessCredentials"
    },
    {
      "type": "com.google.auth.oauth2.ServiceAccountJwtAccessCredentials$Builder"
    },
    {
      "type": "com.google.cloud.Service"
    },
    {
      "type": "com.google.cloud.firestore.Firestore"
    },
    {
      "type": "com.google.cloud.firestore.FirestoreImpl",
      "allDeclaredFields": true
    },
    {
      "type": "com.google.cloud.firestore.FirestoreRpcContext"
    },
    {
      "type": "com.google.common.util.concurrent.AbstractFuture",
      "fields": [
        {
          "name": "listeners"
        },
        {
          "name": "value"
        },
        {
          "name": "waiters"
        }
      ]
    },
    {
      "type": "com.google.common.util.concurrent.AbstractFuture$Waiter",
      "fields": [
        {
          "name": "next"
        },
        {
          "name": "thread"
        }
      ]
    },
    {
      "type": "com.google.gson.Gson",
      "allDeclaredFields": true
    },
    {
      "type": "com.google.gson.GsonBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "com.google.gson.Strictness"
    },
    {
      "type": "com.google.protobuf.ExtensionRegistry",
      "methods": [
        {
          "name": "getEmptyRegistry",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.google.protobuf.Message"
    },
    {
      "type": "com.google.protobuf.RuntimeVersion"
    },
    {
      "type": "com.hazelcast.core.HazelcastInstance"
    },
    {
      "type": "com.jcraft.jzlib.JZlib"
    },
    {
      "type": "com.mongodb.client.MongoClient"
    },
    {
      "type": "com.mongodb.reactivestreams.client.MongoClient"
    },
    {
      "type": "com.netflix.graphql.dgs.DataLoaderInstrumentationExtensionProvider"
    },
    {
      "type": "com.netflix.graphql.dgs.DgsComponent"
    },
    {
      "type": "com.netflix.graphql.dgs.DgsData"
    },
    {
      "type": "com.netflix.graphql.dgs.DgsDataLoaderCustomizer"
    },
    {
      "type": "com.netflix.graphql.dgs.DgsDataLoaderInstrumentation"
    },
    {
      "type": "com.netflix.graphql.dgs.DgsDataLoaderOptionsProvider"
    },
    {
      "type": "com.netflix.graphql.dgs.DgsFederationResolver"
    },
    {
      "type": "com.netflix.graphql.dgs.DgsMutation"
    },
    {
      "type": "com.netflix.graphql.dgs.DgsQuery"
    },
    {
      "type": "com.netflix.graphql.dgs.DgsQueryExecutor"
    },
    {
      "type": "com.netflix.graphql.dgs.DgsRuntimeWiring"
    },
    {
      "type": "com.netflix.graphql.dgs.DgsScalar"
    },
    {
      "type": "com.netflix.graphql.dgs.DgsTypeDefinitionRegistry"
    },
    {
      "type": "com.netflix.graphql.dgs.DgsTypeResolver"
    },
    {
      "type": "com.netflix.graphql.dgs.InputArgument"
    },
    {
      "type": "com.netflix.graphql.dgs.ReloadSchemaIndicator"
    },
    {
      "type": "com.netflix.graphql.dgs.autoconfig.DgsConfigurationProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.util.List",
            "boolean",
            "boolean",
            "com.netflix.graphql.dgs.autoconfig.DgsConfigurationProperties$DgsPreparsedDocumentProviderConfigurationProperties",
            "com.netflix.graphql.dgs.autoconfig.DgsConfigurationProperties$DgsIntrospectionConfigurationProperties",
            "int",
            "kotlin.jvm.internal.DefaultConstructorMarker"
          ]
        }
      ]
    },
    {
      "type": "com.netflix.graphql.dgs.autoconfig.DgsConfigurationProperties$DgsIntrospectionConfigurationProperties"
    },
    {
      "type": "com.netflix.graphql.dgs.autoconfig.DgsConfigurationProperties$DgsPreparsedDocumentProviderConfigurationProperties"
    },
    {
      "type": "com.netflix.graphql.dgs.autoconfig.DgsDataloaderConfigurationProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "boolean",
            "java.time.Duration"
          ]
        }
      ]
    },
    {
      "type": "com.netflix.graphql.dgs.autoconfig.DgsInputArgumentConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "coroutineArgumentResolver",
          "parameterTypes": []
        },
        {
          "name": "dataFetchingEnvironmentArgumentResolver",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext"
          ]
        },
        {
          "name": "defaultInputObjectMapper",
          "parameterTypes": []
        },
        {
          "name": "fallbackEnvironmentArgumentResolver",
          "parameterTypes": [
            "com.netflix.graphql.dgs.internal.InputObjectMapper"
          ]
        },
        {
          "name": "inputArgumentResolver",
          "parameterTypes": [
            "com.netflix.graphql.dgs.internal.InputObjectMapper"
          ]
        },
        {
          "name": "sourceArgumentResolver",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.netflix.graphql.dgs.context.DgsCustomContextBuilder"
    },
    {
      "type": "com.netflix.graphql.dgs.context.DgsCustomContextBuilderWithRequest"
    },
    {
      "type": "com.netflix.graphql.dgs.context.GraphQLContextContributor"
    },
    {
      "type": "com.netflix.graphql.dgs.context.GraphQLContextContributorInstrumentation",
      "allDeclaredFields": true
    },
    {
      "type": "com.netflix.graphql.dgs.exceptions.DefaultDataFetcherExceptionHandler",
      "allDeclaredFields": true
    },
    {
      "type": "com.netflix.graphql.dgs.internal.DataFetcherResultProcessor"
    },
    {
      "type": "com.netflix.graphql.dgs.internal.DefaultDataLoaderOptionsProvider",
      "allDeclaredFields": true
    },
    {
      "type": "com.netflix.graphql.dgs.internal.DefaultDgsGraphQLContextBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "com.netflix.graphql.dgs.internal.DefaultInputObjectMapper",
      "allDeclaredFields": true
    },
    {
      "type": "com.netflix.graphql.dgs.internal.DgsDataLoaderInstrumentationDataLoaderCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "com.netflix.graphql.dgs.internal.DgsDataLoaderProvider",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "findDataLoaders$graphql_dgs",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.netflix.graphql.dgs.internal.DgsQueryExecutorRequestCustomizer"
    },
    {
      "type": "com.netflix.graphql.dgs.internal.DgsSchemaProvider",
      "allDeclaredFields": true
    },
    {
      "type": "com.netflix.graphql.dgs.internal.DgsWrapWithContextDataLoaderCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "com.netflix.graphql.dgs.internal.EntityFetcherRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "com.netflix.graphql.dgs.internal.FlowDataFetcherResultProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "com.netflix.graphql.dgs.internal.FluxDataFetcherResultProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "com.netflix.graphql.dgs.internal.GraphQLJavaErrorInstrumentation",
      "allDeclaredFields": true
    },
    {
      "type": "com.netflix.graphql.dgs.internal.InputObjectMapper"
    },
    {
      "type": "com.netflix.graphql.dgs.internal.MonoDataFetcherResultProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "com.netflix.graphql.dgs.internal.QueryValueCustomizer"
    },
    {
      "type": "com.netflix.graphql.dgs.internal.method.AbstractInputArgumentResolver",
      "allDeclaredFields": true
    },
    {
      "type": "com.netflix.graphql.dgs.internal.method.ArgumentResolver"
    },
    {
      "type": "com.netflix.graphql.dgs.internal.method.ContinuationArgumentResolver",
      "allDeclaredFields": true
    },
    {
      "type": "com.netflix.graphql.dgs.internal.method.DataFetchingEnvironmentArgumentResolver",
      "allDeclaredFields": true
    },
    {
      "type": "com.netflix.graphql.dgs.internal.method.FallbackEnvironmentArgumentResolver",
      "allDeclaredFields": true
    },
    {
      "type": "com.netflix.graphql.dgs.internal.method.InputArgumentResolver",
      "allDeclaredFields": true
    },
    {
      "type": "com.netflix.graphql.dgs.internal.method.MethodDataFetcherFactory",
      "allDeclaredFields": true
    },
    {
      "type": "com.netflix.graphql.dgs.internal.method.SourceArgumentResolver",
      "allDeclaredFields": true
    },
    {
      "type": "com.netflix.graphql.dgs.reactive.DgsReactiveCustomContextBuilderWithRequest"
    },
    {
      "type": "com.netflix.graphql.dgs.reactive.DgsReactiveQueryExecutor"
    },
    {
      "type": "com.netflix.graphql.dgs.reactive.internal.DefaultDgsReactiveGraphQLContextBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "com.netflix.graphql.dgs.reactive.internal.method.SyncHandlerMethodArgumentResolverAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "com.netflix.graphql.dgs.springgraphql.ReloadableGraphQLSource",
      "allDeclaredFields": true
    },
    {
      "type": "com.netflix.graphql.dgs.springgraphql.SpringGraphQLDgsQueryExecutor",
      "allDeclaredFields": true
    },
    {
      "type": "com.netflix.graphql.dgs.springgraphql.SpringGraphQLDgsReactiveQueryExecutor",
      "allDeclaredFields": true
    },
    {
      "type": "com.netflix.graphql.dgs.springgraphql.autoconfig.DgsSpringGraphQLAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.netflix.graphql.dgs.autoconfig.DgsConfigurationProperties",
            "com.netflix.graphql.dgs.autoconfig.DgsDataloaderConfigurationProperties"
          ]
        },
        {
          "name": "dataFetcherExceptionHandler",
          "parameterTypes": []
        },
        {
          "name": "defaultQueryValueCustomizer",
          "parameterTypes": []
        },
        {
          "name": "defaultReloadSchemaIndicator",
          "parameterTypes": [
            "org.springframework.core.env.Environment"
          ]
        },
        {
          "name": "dgsDataLoaderInstrumentationDataLoaderCustomizer",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "dgsDataLoaderOptionsProvider",
          "parameterTypes": []
        },
        {
          "name": "dgsDataLoaderProvider",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "com.netflix.graphql.dgs.DgsDataLoaderOptionsProvider",
            "java.util.concurrent.ScheduledExecutorService",
            "java.util.List",
            "java.util.List"
          ]
        },
        {
          "name": "dgsHeadersInterceptor",
          "parameterTypes": []
        },
        {
          "name": "dgsRuntimeWiringConfigurerBridge",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "dgsScheduledExecutorService",
          "parameterTypes": []
        },
        {
          "name": "dgsSchemaProvider",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional",
            "java.util.List",
            "java.util.Optional",
            "com.netflix.graphql.dgs.internal.EntityFetcherRegistry",
            "java.util.Optional",
            "com.netflix.graphql.dgs.internal.method.MethodDataFetcherFactory",
            "graphql.schema.TypeResolver"
          ]
        },
        {
          "name": "dgsTypeDefinitionConfigurerBridge",
          "parameterTypes": [
            "org.springframework.core.env.Environment"
          ]
        },
        {
          "name": "dgsWrapWithContextDataLoaderCustomizer",
          "parameterTypes": []
        },
        {
          "name": "entityFetcherRegistry",
          "parameterTypes": []
        },
        {
          "name": "flowReactiveDataFetcherResultProcessor",
          "parameterTypes": []
        },
        {
          "name": "fluxReactiveDataFetcherResultProcessor",
          "parameterTypes": []
        },
        {
          "name": "graphQLContextBuilder",
          "parameterTypes": [
            "java.util.Optional",
            "java.util.Optional"
          ]
        },
        {
          "name": "graphQLContextContributionInstrumentation",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "graphQlSource",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.graphql.GraphQlProperties",
            "com.netflix.graphql.dgs.internal.DgsSchemaProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "com.netflix.graphql.dgs.ReloadSchemaIndicator",
            "graphql.execution.DataFetcherExceptionHandler",
            "java.util.function.Consumer"
          ]
        },
        {
          "name": "graphqlJavaErrorInstrumentation",
          "parameterTypes": []
        },
        {
          "name": "methodDataFetcherFactory",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "java.util.Optional"
          ]
        },
        {
          "name": "monoReactiveDataFetcherResultProcessor",
          "parameterTypes": []
        },
        {
          "name": "sourceBuilderCustomizer",
          "parameterTypes": [
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional",
            "graphql.execution.DataFetcherExceptionHandler",
            "org.springframework.core.env.Environment"
          ]
        },
        {
          "name": "springGraphQLDgsQueryExecutor",
          "parameterTypes": [
            "org.springframework.graphql.ExecutionGraphQlService",
            "com.netflix.graphql.dgs.internal.DefaultDgsGraphQLContextBuilder",
            "com.netflix.graphql.dgs.internal.DgsDataLoaderProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "com.netflix.graphql.dgs.springgraphql.autoconfig.DgsSpringGraphQLAutoConfiguration$Companion"
    },
    {
      "type": "com.netflix.graphql.dgs.springgraphql.autoconfig.DgsSpringGraphQLAutoConfiguration$DgsRuntimeWiringConfigurerBridge",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "runtimeWiring",
          "parameterTypes": [
            "graphql.schema.idl.RuntimeWiring$Builder"
          ]
        }
      ]
    },
    {
      "type": "com.netflix.graphql.dgs.springgraphql.autoconfig.DgsSpringGraphQLAutoConfiguration$DgsTypeDefinitionConfigurerBridge",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "typeDefinitionRegistry",
          "parameterTypes": [
            "graphql.schema.idl.TypeDefinitionRegistry"
          ]
        }
      ]
    },
    {
      "type": "com.netflix.graphql.dgs.springgraphql.autoconfig.DgsSpringGraphQLAutoConfiguration$ReactiveConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "dgsServerWebExchangeContextFilter",
          "parameterTypes": []
        },
        {
          "name": "reactiveGraphQlContextBuilder",
          "parameterTypes": [
            "java.util.Optional"
          ]
        },
        {
          "name": "springGraphQLDgsReactiveQueryExecutor",
          "parameterTypes": [
            "org.springframework.graphql.ExecutionGraphQlService",
            "com.netflix.graphql.dgs.reactive.internal.DefaultDgsReactiveGraphQLContextBuilder",
            "com.netflix.graphql.dgs.internal.DgsDataLoaderProvider"
          ]
        }
      ]
    },
    {
      "type": "com.netflix.graphql.dgs.springgraphql.autoconfig.DgsSpringGraphQLAutoConfiguration$WebFluxArgumentHandlerConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "cookieValueArgumentResolver",
          "parameterTypes": [
            "org.springframework.beans.factory.config.ConfigurableBeanFactory",
            "org.springframework.core.ReactiveAdapterRegistry",
            "org.springframework.web.reactive.BindingContext"
          ]
        },
        {
          "name": "dgsBindingContext",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "requestHeaderArgumentResolver",
          "parameterTypes": [
            "org.springframework.beans.factory.config.ConfigurableBeanFactory",
            "org.springframework.core.ReactiveAdapterRegistry",
            "org.springframework.web.reactive.BindingContext"
          ]
        },
        {
          "name": "requestHeaderMapArgumentResolver",
          "parameterTypes": [
            "org.springframework.core.ReactiveAdapterRegistry",
            "org.springframework.web.reactive.BindingContext"
          ]
        },
        {
          "name": "requestParamArgumentResolver",
          "parameterTypes": [
            "org.springframework.beans.factory.config.ConfigurableBeanFactory",
            "org.springframework.core.ReactiveAdapterRegistry",
            "org.springframework.web.reactive.BindingContext"
          ]
        },
        {
          "name": "requestParamMapArgumentResolver",
          "parameterTypes": [
            "org.springframework.beans.factory.config.ConfigurableBeanFactory",
            "org.springframework.core.ReactiveAdapterRegistry",
            "org.springframework.web.reactive.BindingContext"
          ]
        }
      ]
    },
    {
      "type": "com.netflix.graphql.dgs.springgraphql.autoconfig.DgsSpringGraphQLAutoConfiguration$WebFluxArgumentHandlerConfiguration$Dgs"
    },
    {
      "type": "com.netflix.graphql.dgs.springgraphql.autoconfig.DgsSpringGraphQLAutoConfiguration$WebFluxConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "webFluxDgsGraphQLInterceptor",
          "parameterTypes": [
            "com.netflix.graphql.dgs.internal.DgsDataLoaderProvider",
            "com.netflix.graphql.dgs.reactive.internal.DefaultDgsReactiveGraphQLContextBuilder"
          ]
        }
      ]
    },
    {
      "type": "com.netflix.graphql.dgs.springgraphql.autoconfig.DgsSpringGraphQLAutoConfiguration$WebMvcArgumentHandlerConfiguration"
    },
    {
      "type": "com.netflix.graphql.dgs.springgraphql.autoconfig.DgsSpringGraphQLAutoConfiguration$WebMvcArgumentHandlerConfiguration$Dgs"
    },
    {
      "type": "com.netflix.graphql.dgs.springgraphql.autoconfig.DgsSpringGraphQLAutoConfiguration$WebMvcConfiguration"
    },
    {
      "type": "com.netflix.graphql.dgs.springgraphql.autoconfig.DgsSpringGraphQLConfigurationProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.netflix.graphql.dgs.springgraphql.autoconfig.DgsSpringGraphQLConfigurationProperties$WebMvc",
            "int",
            "kotlin.jvm.internal.DefaultConstructorMarker"
          ]
        }
      ]
    },
    {
      "type": "com.netflix.graphql.dgs.springgraphql.autoconfig.DgsSpringGraphQLConfigurationProperties$WebMvc"
    },
    {
      "type": "com.netflix.graphql.dgs.springgraphql.autoconfig.DgsSpringGraphQLEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.netflix.graphql.dgs.springgraphql.autoconfig.ExcludeAutoConfigurationsEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.netflix.graphql.dgs.springgraphql.webflux.DgsWebFluxGraphQLInterceptor",
      "allDeclaredFields": true
    },
    {
      "type": "com.nimbusds.jose.jwk.source.JWKSource"
    },
    {
      "type": "com.querydsl.core.Query"
    },
    {
      "type": "com.rabbitmq.client.Channel"
    },
    {
      "type": "com.samskivert.mustache.Mustache"
    },
    {
      "type": "com.samskivert.mustache.Template"
    },
    {
      "type": "com.sendgrid.SendGrid"
    },
    {
      "type": "com.sun.crypto.provider.AESCipher$General",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.ARCFOURCipher",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.ChaCha20Cipher$ChaCha20Poly1305",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.DESCipher",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.DESedeCipher",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.DHParameters",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.GaloisCounterMode$AESGCM",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.HmacCore$HmacSHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.HmacCore$HmacSHA384",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.TlsKeyMaterialGenerator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.TlsMasterSecretGenerator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.TlsPrfGenerator$V12",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.jndi.dns.DnsContextFactory"
    },
    {
      "type": "com.sun.jndi.url.dns.dnsURLContextFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.security.cert.internal.x509.X509V1CertImpl"
    },
    {
      "type": "com.sun.xml.internal.stream.XMLInputFactoryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.unboundid.ldap.listener.InMemoryDirectoryServer"
    },
    {
      "type": "freemarker.template.Configuration"
    },
    {
      "type": "graphql.ExperimentalApi"
    },
    {
      "type": "graphql.GraphQL"
    },
    {
      "type": "graphql.PublicApi"
    },
    {
      "type": "graphql.PublicSpi"
    },
    {
      "type": "graphql.execution.DataFetcherExceptionHandler"
    },
    {
      "type": "graphql.execution.ExecutionStrategy"
    },
    {
      "type": "graphql.execution.instrumentation.Instrumentation"
    },
    {
      "type": "graphql.execution.instrumentation.SimplePerformantInstrumentation",
      "allDeclaredFields": true
    },
    {
      "type": "graphql.execution.preparsed.PreparsedDocumentProvider"
    },
    {
      "type": "graphql.schema.Coercing"
    },
    {
      "type": "graphql.schema.DataFetcherFactory"
    },
    {
      "type": "graphql.schema.GraphQLCodeRegistry"
    },
    {
      "type": "graphql.schema.TypeResolver"
    },
    {
      "type": "graphql.schema.idl.TypeDefinitionRegistry"
    },
    {
      "type": "groovy.lang.MetaClass"
    },
    {
      "type": "groovy.text.TemplateEngine"
    },
    {
      "type": "groovy.text.markup.MarkupTemplateEngine"
    },
    {
      "type": "io.github.reactivecircus.kstreamlined.backend.KSBackendApplication",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.reactivecircus.kstreamlined.backend.KSBackendApplicationKt",
      "methods": [
        {
          "name": "main",
          "parameterTypes": [
            "java.lang.String[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.reactivecircus.kstreamlined.backend.KSConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "feedDataSource",
          "parameterTypes": [
            "io.ktor.client.engine.HttpClientEngine",
            "io.github.reactivecircus.kstreamlined.backend.datasource.FeedDataSourceConfig",
            "io.github.reactivecircus.kstreamlined.backend.redis.RedisClient",
            "io.github.reactivecircus.kstreamlined.backend.datasource.FeedPersister"
          ]
        },
        {
          "name": "feedDataSourceConfig",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "java.lang.String"
          ]
        },
        {
          "name": "feedPersister",
          "parameterTypes": [
            "com.google.cloud.firestore.Firestore"
          ]
        },
        {
          "name": "firestore",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "httpClientEngine",
          "parameterTypes": []
        },
        {
          "name": "kotlinWeeklyIssueDataSource",
          "parameterTypes": [
            "io.ktor.client.engine.HttpClientEngine"
          ]
        },
        {
          "name": "redisClient",
          "parameterTypes": [
            "io.ktor.client.engine.HttpClientEngine",
            "java.lang.String",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "io.github.reactivecircus.kstreamlined.backend.KSConfiguration$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.reactivecircus.kstreamlined.backend.KSConfiguration$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.reactivecircus.kstreamlined.backend.KSConfiguration$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.reactivecircus.kstreamlined.backend.NoArg"
    },
    {
      "type": "io.github.reactivecircus.kstreamlined.backend.datafetcher.FeedEntryDataFetcher",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "io.github.reactivecircus.kstreamlined.backend.datasource.FeedDataSource"
          ]
        },
        {
          "name": "feedEntries",
          "parameterTypes": [
            "java.util.List",
            "kotlin.coroutines.Continuation"
          ]
        },
        {
          "name": "resolveFeedEntry$kstreamlined_backend",
          "parameterTypes": [
            "io.github.reactivecircus.kstreamlined.backend.schema.generated.types.FeedEntry"
          ]
        },
        {
          "name": "syncFeeds",
          "parameterTypes": [
            "kotlin.coroutines.Continuation"
          ]
        }
      ]
    },
    {
      "type": "io.github.reactivecircus.kstreamlined.backend.datafetcher.FeedSourceDataFetcher",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "feedSources",
          "parameterTypes": [
            "kotlin.coroutines.Continuation"
          ]
        }
      ]
    },
    {
      "type": "io.github.reactivecircus.kstreamlined.backend.datafetcher.KotlinWeeklyIssueDataFetcher",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "io.github.reactivecircus.kstreamlined.backend.datasource.KotlinWeeklyIssueDataSource"
          ]
        },
        {
          "name": "kotlinWeeklyIssue",
          "parameterTypes": [
            "java.lang.String",
            "kotlin.coroutines.Continuation"
          ]
        }
      ]
    },
    {
      "type": "io.github.reactivecircus.kstreamlined.backend.datafetcher.scalar.InstantScalar",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.reactivecircus.kstreamlined.backend.datasource.FeedDataSource"
    },
    {
      "type": "io.github.reactivecircus.kstreamlined.backend.datasource.FeedDataSourceConfig",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.reactivecircus.kstreamlined.backend.datasource.FeedPersister"
    },
    {
      "type": "io.github.reactivecircus.kstreamlined.backend.datasource.FirestoreFeedPersister",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.reactivecircus.kstreamlined.backend.datasource.KotlinWeeklyIssueDataSource"
    },
    {
      "type": "io.github.reactivecircus.kstreamlined.backend.datasource.RealFeedDataSource",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.reactivecircus.kstreamlined.backend.datasource.RealKotlinWeeklyIssueDataSource",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.reactivecircus.kstreamlined.backend.datasource.dto.KotlinBlogItem",
      "allDeclaredFields": true,
      "allPublicFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getDescription",
          "parameterTypes": []
        },
        {
          "name": "getFeaturedImage",
          "parameterTypes": []
        },
        {
          "name": "getGuid",
          "parameterTypes": []
        },
        {
          "name": "getLink",
          "parameterTypes": []
        },
        {
          "name": "getPubDate",
          "parameterTypes": []
        },
        {
          "name": "getTitle",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.reactivecircus.kstreamlined.backend.datasource.dto.KotlinBlogRss",
      "fields": [
        {
          "name": "Companion"
        }
      ]
    },
    {
      "type": "io.github.reactivecircus.kstreamlined.backend.datasource.dto.KotlinBlogRss$Companion",
      "methods": [
        {
          "name": "serializer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.reactivecircus.kstreamlined.backend.datasource.dto.KotlinWeeklyItem",
      "allDeclaredFields": true,
      "allPublicFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getGuid",
          "parameterTypes": []
        },
        {
          "name": "getLink",
          "parameterTypes": []
        },
        {
          "name": "getPubDate",
          "parameterTypes": []
        },
        {
          "name": "getTitle",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.reactivecircus.kstreamlined.backend.datasource.dto.KotlinWeeklyRss",
      "fields": [
        {
          "name": "Companion"
        }
      ]
    },
    {
      "type": "io.github.reactivecircus.kstreamlined.backend.datasource.dto.KotlinWeeklyRss$Companion",
      "methods": [
        {
          "name": "serializer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.reactivecircus.kstreamlined.backend.datasource.dto.KotlinYouTubeAuthor",
      "allDeclaredFields": true,
      "allPublicFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getName",
          "parameterTypes": []
        },
        {
          "name": "getUri",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.reactivecircus.kstreamlined.backend.datasource.dto.KotlinYouTubeItem",
      "allDeclaredFields": true,
      "allPublicFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getAuthor",
          "parameterTypes": []
        },
        {
          "name": "getChannelId",
          "parameterTypes": []
        },
        {
          "name": "getId",
          "parameterTypes": []
        },
        {
          "name": "getLink",
          "parameterTypes": []
        },
        {
          "name": "getMediaGroup",
          "parameterTypes": []
        },
        {
          "name": "getPublished",
          "parameterTypes": []
        },
        {
          "name": "getTitle",
          "parameterTypes": []
        },
        {
          "name": "getUpdated",
          "parameterTypes": []
        },
        {
          "name": "getVideoId",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.reactivecircus.kstreamlined.backend.datasource.dto.Link",
      "allDeclaredFields": true,
      "allPublicFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getHref",
          "parameterTypes": []
        },
        {
          "name": "getRel",
          "parameterTypes": []
        },
        {
          "name": "getTitle",
          "parameterTypes": []
        },
        {
          "name": "getType",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.reactivecircus.kstreamlined.backend.datasource.dto.MediaCommunity",
      "allDeclaredFields": true,
      "allPublicFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getStarRating",
          "parameterTypes": []
        },
        {
          "name": "getStatistics",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.reactivecircus.kstreamlined.backend.datasource.dto.MediaCommunity$StarRating",
      "allDeclaredFields": true,
      "allPublicFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getAverage",
          "parameterTypes": []
        },
        {
          "name": "getCount",
          "parameterTypes": []
        },
        {
          "name": "getMax",
          "parameterTypes": []
        },
        {
          "name": "getMin",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.reactivecircus.kstreamlined.backend.datasource.dto.MediaCommunity$Statistics",
      "allDeclaredFields": true,
      "allPublicFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getViews",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.reactivecircus.kstreamlined.backend.datasource.dto.MediaGroup",
      "allDeclaredFields": true,
      "allPublicFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getCommunity",
          "parameterTypes": []
        },
        {
          "name": "getContent",
          "parameterTypes": []
        },
        {
          "name": "getDescription",
          "parameterTypes": []
        },
        {
          "name": "getThumbnail",
          "parameterTypes": []
        },
        {
          "name": "getTitle",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.reactivecircus.kstreamlined.backend.datasource.dto.MediaGroup$Content",
      "allDeclaredFields": true,
      "allPublicFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getHeight",
          "parameterTypes": []
        },
        {
          "name": "getType",
          "parameterTypes": []
        },
        {
          "name": "getUrl",
          "parameterTypes": []
        },
        {
          "name": "getWidth",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.reactivecircus.kstreamlined.backend.datasource.dto.MediaGroup$Thumbnail",
      "allDeclaredFields": true,
      "allPublicFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getHeight",
          "parameterTypes": []
        },
        {
          "name": "getUrl",
          "parameterTypes": []
        },
        {
          "name": "getWidth",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.reactivecircus.kstreamlined.backend.datasource.dto.TalkingKotlinItem",
      "allDeclaredFields": true,
      "allPublicFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getDuration",
          "parameterTypes": []
        },
        {
          "name": "getEnclosure",
          "parameterTypes": []
        },
        {
          "name": "getGuid",
          "parameterTypes": []
        },
        {
          "name": "getImage",
          "parameterTypes": []
        },
        {
          "name": "getLink",
          "parameterTypes": []
        },
        {
          "name": "getPubDate",
          "parameterTypes": []
        },
        {
          "name": "getSummary",
          "parameterTypes": []
        },
        {
          "name": "getTitle",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.reactivecircus.kstreamlined.backend.datasource.dto.TalkingKotlinItem$Enclosure",
      "allDeclaredFields": true,
      "allPublicFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getUrl",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.reactivecircus.kstreamlined.backend.datasource.dto.TalkingKotlinItem$Image",
      "allDeclaredFields": true,
      "allPublicFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getHref",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.reactivecircus.kstreamlined.backend.datasource.dto.TalkingKotlinRss",
      "fields": [
        {
          "name": "Companion"
        }
      ]
    },
    {
      "type": "io.github.reactivecircus.kstreamlined.backend.datasource.dto.TalkingKotlinRss$Companion",
      "methods": [
        {
          "name": "serializer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.reactivecircus.kstreamlined.backend.redis.RedisClient",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.reactivecircus.kstreamlined.backend.schema.generated.types.FeedEntry"
    },
    {
      "type": "io.github.reactivecircus.kstreamlined.backend.schema.generated.types.FeedSource",
      "methods": [
        {
          "name": "getDescription",
          "parameterTypes": []
        },
        {
          "name": "getKey",
          "parameterTypes": []
        },
        {
          "name": "getTitle",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.reactivecircus.kstreamlined.backend.schema.generated.types.FeedSourceKey"
    },
    {
      "type": "io.github.reactivecircus.kstreamlined.backend.schema.generated.types.KotlinBlog",
      "methods": [
        {
          "name": "getContentUrl",
          "parameterTypes": []
        },
        {
          "name": "getFeaturedImageUrl",
          "parameterTypes": []
        },
        {
          "name": "getId",
          "parameterTypes": []
        },
        {
          "name": "getPublishTime",
          "parameterTypes": []
        },
        {
          "name": "getTitle",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.reactivecircus.kstreamlined.backend.schema.generated.types.KotlinWeekly",
      "methods": [
        {
          "name": "getContentUrl",
          "parameterTypes": []
        },
        {
          "name": "getId",
          "parameterTypes": []
        },
        {
          "name": "getIssueNumber",
          "parameterTypes": []
        },
        {
          "name": "getPublishTime",
          "parameterTypes": []
        },
        {
          "name": "getTitle",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.reactivecircus.kstreamlined.backend.schema.generated.types.KotlinWeeklyIssueEntry",
      "methods": [
        {
          "name": "getGroup",
          "parameterTypes": []
        },
        {
          "name": "getSource",
          "parameterTypes": []
        },
        {
          "name": "getSummary",
          "parameterTypes": []
        },
        {
          "name": "getTitle",
          "parameterTypes": []
        },
        {
          "name": "getUrl",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.reactivecircus.kstreamlined.backend.schema.generated.types.KotlinYouTube",
      "methods": [
        {
          "name": "getContentUrl",
          "parameterTypes": []
        },
        {
          "name": "getDescription",
          "parameterTypes": []
        },
        {
          "name": "getId",
          "parameterTypes": []
        },
        {
          "name": "getPublishTime",
          "parameterTypes": []
        },
        {
          "name": "getThumbnailUrl",
          "parameterTypes": []
        },
        {
          "name": "getTitle",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.reactivecircus.kstreamlined.backend.schema.generated.types.TalkingKotlin",
      "methods": [
        {
          "name": "getAudioUrl",
          "parameterTypes": []
        },
        {
          "name": "getContentUrl",
          "parameterTypes": []
        },
        {
          "name": "getDuration",
          "parameterTypes": []
        },
        {
          "name": "getId",
          "parameterTypes": []
        },
        {
          "name": "getPublishTime",
          "parameterTypes": []
        },
        {
          "name": "getSummary",
          "parameterTypes": []
        },
        {
          "name": "getThumbnailUrl",
          "parameterTypes": []
        },
        {
          "name": "getTitle",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.grpc.census.InternalCensusStatsAccessor"
    },
    {
      "type": "io.grpc.census.InternalCensusTracingAccessor"
    },
    {
      "type": "io.grpc.googleapis.GoogleCloudToProdExperimentalNameResolverProvider"
    },
    {
      "type": "io.grpc.googleapis.GoogleCloudToProdNameResolverProvider"
    },
    {
      "type": "io.grpc.grpclb.GrpclbLoadBalancerProvider"
    },
    {
      "type": "io.grpc.grpclb.SecretGrpclbNameResolverProvider$Provider"
    },
    {
      "type": "io.grpc.internal.DnsNameResolverProvider"
    },
    {
      "type": "io.grpc.internal.JndiResourceResolverFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.grpc.internal.PickFirstLoadBalancerProvider"
    },
    {
      "type": "io.grpc.internal.SerializingExecutor",
      "fields": [
        {
          "name": "runState"
        }
      ]
    },
    {
      "type": "io.grpc.netty.NettyChannelProvider"
    },
    {
      "type": "io.grpc.netty.UdsNettyChannelProvider"
    },
    {
      "type": "io.grpc.netty.shaded.io.grpc.netty.NettyChannelProvider"
    },
    {
      "type": "io.grpc.netty.shaded.io.grpc.netty.NettyClientHandler"
    },
    {
      "type": "io.grpc.netty.shaded.io.grpc.netty.ProtocolNegotiators$ClientTlsHandler"
    },
    {
      "type": "io.grpc.netty.shaded.io.grpc.netty.ProtocolNegotiators$GrpcNegotiationHandler"
    },
    {
      "type": "io.grpc.netty.shaded.io.grpc.netty.ProtocolNegotiators$WaitUntilActiveHandler"
    },
    {
      "type": "io.grpc.netty.shaded.io.grpc.netty.UdsNameResolverProvider"
    },
    {
      "type": "io.grpc.netty.shaded.io.grpc.netty.UdsNettyChannelProvider"
    },
    {
      "type": "io.grpc.netty.shaded.io.grpc.netty.WriteBufferingAndExceptionHandler"
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.buffer.AbstractByteBufAllocator"
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.buffer.AbstractReferenceCountedByteBuf",
      "fields": [
        {
          "name": "refCnt"
        }
      ]
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.channel.AbstractChannelHandlerContext",
      "fields": [
        {
          "name": "handlerState"
        }
      ]
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.channel.ChannelOutboundBuffer",
      "fields": [
        {
          "name": "totalPendingSize"
        },
        {
          "name": "unwritable"
        }
      ]
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.channel.DefaultChannelConfig",
      "fields": [
        {
          "name": "autoRead"
        },
        {
          "name": "writeBufferWaterMark"
        }
      ]
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.channel.DefaultChannelPipeline",
      "fields": [
        {
          "name": "estimatorHandle"
        }
      ]
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.channel.DefaultChannelPipeline$HeadContext"
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.channel.DefaultChannelPipeline$TailContext"
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.channel.DefaultFileRegion"
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.channel.epoll.Epoll",
      "methods": [
        {
          "name": "isAvailable",
          "parameterTypes": []
        },
        {
          "name": "unavailabilityCause",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.channel.epoll.NativeDatagramPacketArray$NativeDatagramPacket"
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.channel.unix.PeerCredentials"
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.handler.ssl.SslHandler"
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.internal.tcnative.CertificateCallback"
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.internal.tcnative.CertificateCallbackTask"
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.internal.tcnative.SSLContext"
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.internal.tcnative.SSLPrivateKeyMethodDecryptTask"
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.internal.tcnative.SSLPrivateKeyMethodSignTask"
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.internal.tcnative.SSLPrivateKeyMethodTask"
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.internal.tcnative.SSLTask"
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.util.AbstractReferenceCounted",
      "fields": [
        {
          "name": "refCnt"
        }
      ]
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.util.DefaultAttributeMap",
      "fields": [
        {
          "name": "attributes"
        }
      ]
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.util.Recycler$DefaultHandle",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.util.ReferenceCountUtil"
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.util.ResourceLeakDetector$DefaultResourceLeak",
      "fields": [
        {
          "name": "droppedRecords"
        },
        {
          "name": "head"
        }
      ]
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.util.concurrent.DefaultPromise",
      "fields": [
        {
          "name": "result"
        }
      ]
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor",
      "fields": [
        {
          "name": "state"
        },
        {
          "name": "threadProperties"
        }
      ]
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.util.internal.NativeLibraryUtil",
      "methods": [
        {
          "name": "loadLibrary",
          "parameterTypes": [
            "java.lang.String",
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
      "fields": [
        {
          "name": "producerLimit"
        }
      ]
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
      "fields": [
        {
          "name": "consumerIndex"
        }
      ]
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
      "fields": [
        {
          "name": "producerIndex"
        }
      ]
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField",
      "fields": [
        {
          "name": "consumerIndex"
        }
      ]
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField",
      "fields": [
        {
          "name": "producerIndex"
        }
      ]
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField",
      "fields": [
        {
          "name": "producerLimit"
        }
      ]
    },
    {
      "type": "io.grpc.okhttp.OkHttpChannelProvider"
    },
    {
      "type": "io.grpc.override.ContextStorageOverride",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.grpc.protobuf.services.internal.HealthCheckingRoundRobinLoadBalancerProvider"
    },
    {
      "type": "io.grpc.util.OutlierDetectionLoadBalancerProvider"
    },
    {
      "type": "io.grpc.util.SecretRoundRobinLoadBalancerProvider$Provider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.grpc.xds.CdsLoadBalancerProvider"
    },
    {
      "type": "io.grpc.xds.ClusterImplLoadBalancerProvider"
    },
    {
      "type": "io.grpc.xds.ClusterManagerLoadBalancerProvider"
    },
    {
      "type": "io.grpc.xds.ClusterResolverLoadBalancerProvider"
    },
    {
      "type": "io.grpc.xds.LeastRequestLoadBalancerProvider"
    },
    {
      "type": "io.grpc.xds.PriorityLoadBalancerProvider"
    },
    {
      "type": "io.grpc.xds.RingHashLoadBalancerProvider"
    },
    {
      "type": "io.grpc.xds.WeightedRoundRobinLoadBalancerProvider"
    },
    {
      "type": "io.grpc.xds.WeightedTargetLoadBalancerProvider"
    },
    {
      "type": "io.grpc.xds.WrrLocalityLoadBalancerProvider"
    },
    {
      "type": "io.grpc.xds.XdsNameResolverProvider"
    },
    {
      "type": "io.ktor.client.HttpClient",
      "fields": [
        {
          "name": "closed"
        }
      ]
    },
    {
      "type": "io.ktor.client.HttpClientConfig"
    },
    {
      "type": "io.ktor.client.call.HttpClientCall",
      "fields": [
        {
          "name": "received"
        }
      ]
    },
    {
      "type": "io.ktor.client.content.ProgressListener"
    },
    {
      "type": "io.ktor.client.engine.HttpClientEngine"
    },
    {
      "type": "io.ktor.client.engine.HttpClientEngineBase",
      "allDeclaredFields": true
    },
    {
      "type": "io.ktor.client.engine.HttpClientEngineCapability"
    },
    {
      "type": "io.ktor.client.engine.HttpClientEngineConfig"
    },
    {
      "type": "io.ktor.client.engine.okhttp.OkHttpEngine",
      "allDeclaredFields": true
    },
    {
      "type": "io.ktor.client.plugins.HttpSend"
    },
    {
      "type": "io.ktor.client.plugins.HttpTimeoutConfig"
    },
    {
      "type": "io.ktor.client.plugins.api.ClientPluginImpl"
    },
    {
      "type": "io.ktor.client.plugins.api.ClientPluginInstance"
    },
    {
      "type": "io.ktor.client.plugins.internal.ByteChannelReplay",
      "fields": [
        {
          "name": "content"
        }
      ]
    },
    {
      "type": "io.ktor.client.request.ResponseAdapter"
    },
    {
      "type": "io.ktor.http.ContentType"
    },
    {
      "type": "io.ktor.serialization.kotlinx.json.KotlinxSerializationJsonExtensionProvider"
    },
    {
      "type": "io.ktor.util.Attributes"
    },
    {
      "type": "io.ktor.util.collections.CopyOnWriteHashMap",
      "fields": [
        {
          "name": "current"
        }
      ]
    },
    {
      "type": "io.ktor.util.reflect.TypeInfo"
    },
    {
      "type": "io.ktor.utils.io.ByteChannel",
      "fields": [
        {
          "name": "_closedCause"
        },
        {
          "name": "suspensionSlot"
        }
      ]
    },
    {
      "type": "io.ktor.utils.io.InternalAPI"
    },
    {
      "type": "io.micrometer.context.ContextRegistry"
    },
    {
      "type": "io.micrometer.context.ContextSnapshotFactory"
    },
    {
      "type": "io.micrometer.context.ThreadLocalAccessor"
    },
    {
      "type": "io.micrometer.observation.contextpropagation.ObservationThreadLocalAccessor"
    },
    {
      "type": "io.netty.buffer.AbstractByteBufAllocator"
    },
    {
      "type": "io.netty.buffer.AbstractReferenceCountedByteBuf",
      "fields": [
        {
          "name": "refCnt"
        }
      ]
    },
    {
      "type": "io.netty.buffer.ByteBuf"
    },
    {
      "type": "io.netty.buffer.PooledByteBufAllocator"
    },
    {
      "type": "io.netty.channel.AbstractChannelHandlerContext",
      "fields": [
        {
          "name": "handlerState"
        }
      ]
    },
    {
      "type": "io.netty.channel.ChannelOutboundBuffer",
      "fields": [
        {
          "name": "totalPendingSize"
        },
        {
          "name": "unwritable"
        }
      ]
    },
    {
      "type": "io.netty.channel.DefaultChannelConfig",
      "fields": [
        {
          "name": "autoRead"
        },
        {
          "name": "writeBufferWaterMark"
        }
      ]
    },
    {
      "type": "io.netty.channel.DefaultChannelPipeline",
      "fields": [
        {
          "name": "estimatorHandle"
        }
      ]
    },
    {
      "type": "io.netty.channel.DefaultChannelPipeline$HeadContext"
    },
    {
      "type": "io.netty.channel.DefaultChannelPipeline$TailContext"
    },
    {
      "type": "io.netty.channel.DefaultFileRegion"
    },
    {
      "type": "io.netty.channel.embedded.EmbeddedChannel$2"
    },
    {
      "type": "io.netty.channel.epoll.Epoll"
    },
    {
      "type": "io.netty.channel.epoll.NativeDatagramPacketArray$NativeDatagramPacket"
    },
    {
      "type": "io.netty.channel.kqueue.KQueue"
    },
    {
      "type": "io.netty.channel.unix.PeerCredentials"
    },
    {
      "type": "io.netty.handler.codec.compression.JdkZlibEncoder"
    },
    {
      "type": "io.netty.handler.codec.haproxy.HAProxyMessageDecoder"
    },
    {
      "type": "io.netty.handler.codec.http.HttpServerCodec"
    },
    {
      "type": "io.netty.incubator.channel.uring.IOUring"
    },
    {
      "type": "io.netty.util.AbstractReferenceCounted",
      "fields": [
        {
          "name": "refCnt"
        }
      ]
    },
    {
      "type": "io.netty.util.DefaultAttributeMap",
      "fields": [
        {
          "name": "attributes"
        }
      ]
    },
    {
      "type": "io.netty.util.DefaultAttributeMap$DefaultAttribute",
      "fields": [
        {
          "name": "attributeMap"
        }
      ]
    },
    {
      "type": "io.netty.util.NettyRuntime"
    },
    {
      "type": "io.netty.util.Recycler$DefaultHandle",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "io.netty.util.ReferenceCountUtil"
    },
    {
      "type": "io.netty.util.ResourceLeakDetector$DefaultResourceLeak",
      "fields": [
        {
          "name": "droppedRecords"
        },
        {
          "name": "head"
        }
      ]
    },
    {
      "type": "io.netty.util.concurrent.DefaultPromise",
      "fields": [
        {
          "name": "result"
        }
      ]
    },
    {
      "type": "io.netty.util.concurrent.SingleThreadEventExecutor",
      "fields": [
        {
          "name": "state"
        },
        {
          "name": "threadProperties"
        }
      ]
    },
    {
      "type": "io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueueColdProducerFields",
      "fields": [
        {
          "name": "producerLimit"
        }
      ]
    },
    {
      "type": "io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueueConsumerFields",
      "fields": [
        {
          "name": "consumerIndex"
        }
      ]
    },
    {
      "type": "io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueueProducerFields",
      "fields": [
        {
          "name": "producerIndex"
        }
      ]
    },
    {
      "type": "io.netty.util.internal.shaded.org.jctools.queues.atomic.unpadded.MpscAtomicUnpaddedArrayQueueConsumerIndexField",
      "fields": [
        {
          "name": "consumerIndex"
        }
      ]
    },
    {
      "type": "io.netty.util.internal.shaded.org.jctools.queues.atomic.unpadded.MpscAtomicUnpaddedArrayQueueProducerIndexField",
      "fields": [
        {
          "name": "producerIndex"
        }
      ]
    },
    {
      "type": "io.netty.util.internal.shaded.org.jctools.queues.atomic.unpadded.MpscAtomicUnpaddedArrayQueueProducerLimitField",
      "fields": [
        {
          "name": "producerLimit"
        }
      ]
    },
    {
      "type": "io.netty5.buffer.Buffer"
    },
    {
      "type": "io.opencensus.impl.trace.TraceComponentImpl"
    },
    {
      "type": "io.opencensus.impllite.trace.TraceComponentImplLite"
    },
    {
      "type": "io.opentelemetry.api.incubator.trace.ExtendedDefaultTracerProvider"
    },
    {
      "type": "io.opentelemetry.opencensusshim.OpenTelemetryContextManager"
    },
    {
      "type": "io.opentelemetry.opencensusshim.OpenTelemetryTraceComponentImpl"
    },
    {
      "type": "io.opentelemetry.sdk.autoconfigure.AutoConfiguredOpenTelemetrySdk"
    },
    {
      "type": "io.perfmark.impl.SecretPerfMarkImpl$PerfMarkImpl"
    },
    {
      "type": "io.r2dbc.proxy.ProxyConnectionFactory"
    },
    {
      "type": "io.r2dbc.spi.ConnectionFactory"
    },
    {
      "type": "io.reactivex.rxjava3.core.Flowable"
    },
    {
      "type": "io.rsocket.RSocket"
    },
    {
      "type": "io.rsocket.core.RSocketServer"
    },
    {
      "type": "io.smallrye.mutiny.Multi"
    },
    {
      "type": "io.undertow.Undertow"
    },
    {
      "type": "io.undertow.websockets.WebSocketProtocolHandshakeHandler"
    },
    {
      "type": "it.skrape.fetcher.logging.LoggingConfigurator"
    },
    {
      "type": "jakarta.activation.MimeType"
    },
    {
      "type": "jakarta.annotation.ManagedBean"
    },
    {
      "type": "jakarta.annotation.PostConstruct"
    },
    {
      "type": "jakarta.annotation.PreDestroy"
    },
    {
      "type": "jakarta.annotation.Resource"
    },
    {
      "type": "jakarta.ejb.EJB"
    },
    {
      "type": "jakarta.inject.Inject"
    },
    {
      "type": "jakarta.inject.Named"
    },
    {
      "type": "jakarta.inject.Provider"
    },
    {
      "type": "jakarta.inject.Qualifier"
    },
    {
      "type": "jakarta.jms.ConnectionFactory"
    },
    {
      "type": "jakarta.jms.Message"
    },
    {
      "type": "jakarta.json.bind.Jsonb"
    },
    {
      "type": "jakarta.persistence.EntityManager"
    },
    {
      "type": "jakarta.persistence.EntityManagerFactory"
    },
    {
      "type": "jakarta.servlet.MultipartConfigElement"
    },
    {
      "type": "jakarta.servlet.Servlet"
    },
    {
      "type": "jakarta.servlet.ServletRegistration"
    },
    {
      "type": "jakarta.servlet.ServletRequest"
    },
    {
      "type": "jakarta.transaction.Transaction"
    },
    {
      "type": "jakarta.transaction.TransactionManager"
    },
    {
      "type": "jakarta.validation.Validator"
    },
    {
      "type": "jakarta.validation.executable.ExecutableValidator"
    },
    {
      "type": "jakarta.xml.bind.Binder"
    },
    {
      "type": "java.io.Closeable"
    },
    {
      "type": "java.io.Console",
      "methods": [
        {
          "name": "isTerminal",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.io.FileDescriptor"
    },
    {
      "type": "java.io.Reader"
    },
    {
      "type": "java.io.Serializable"
    },
    {
      "type": "java.lang.AutoCloseable"
    },
    {
      "type": "java.lang.BaseVirtualThread"
    },
    {
      "type": "java.lang.Boolean"
    },
    {
      "type": "java.lang.Class",
      "methods": [
        {
          "name": "isRecord",
          "parameterTypes": []
        },
        {
          "name": "isSealed",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.ClassLoader",
      "fields": [
        {
          "name": "classLoaderValueMap"
        }
      ]
    },
    {
      "type": "java.lang.ClassValue"
    },
    {
      "type": "java.lang.Exception"
    },
    {
      "type": "java.lang.IllegalArgumentException"
    },
    {
      "type": "java.lang.Module"
    },
    {
      "type": "java.lang.NullPointerException"
    },
    {
      "type": "java.lang.Object",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.OutOfMemoryError"
    },
    {
      "type": "java.lang.ProcessHandle",
      "methods": [
        {
          "name": "current",
          "parameterTypes": []
        },
        {
          "name": "pid",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.Record",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.Runnable"
    },
    {
      "type": "java.lang.String"
    },
    {
      "type": "java.lang.Thread",
      "methods": [
        {
          "name": "isVirtual",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.annotation.Documented"
    },
    {
      "type": "java.lang.annotation.Inherited"
    },
    {
      "type": "java.lang.annotation.Repeatable"
    },
    {
      "type": "java.lang.annotation.Retention",
      "methods": [
        {
          "name": "value",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.annotation.Target",
      "methods": [
        {
          "name": "value",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.constant.Constable"
    },
    {
      "type": "java.lang.invoke.TypeDescriptor$OfField"
    },
    {
      "type": "java.lang.management.ManagementFactory",
      "methods": [
        {
          "name": "getRuntimeMXBean",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.management.RuntimeMXBean",
      "methods": [
        {
          "name": "getInputArguments",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.AnnotatedElement"
    },
    {
      "type": "java.lang.reflect.GenericDeclaration"
    },
    {
      "type": "java.lang.reflect.ParameterizedType",
      "methods": [
        {
          "name": "getActualTypeArguments",
          "parameterTypes": []
        },
        {
          "name": "getRawType",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.Type"
    },
    {
      "type": "java.lang.reflect.WildcardType",
      "methods": [
        {
          "name": "getLowerBounds",
          "parameterTypes": []
        },
        {
          "name": "getUpperBounds",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.nio.Bits",
      "fields": [
        {
          "name": "MAX_MEMORY"
        },
        {
          "name": "UNALIGNED"
        }
      ]
    },
    {
      "type": "java.nio.Buffer",
      "fields": [
        {
          "name": "address"
        }
      ]
    },
    {
      "type": "java.nio.ByteBuffer"
    },
    {
      "type": "java.nio.DirectByteBuffer"
    },
    {
      "type": "java.nio.channels.FileChannel"
    },
    {
      "type": "java.nio.channels.spi.SelectorProvider"
    },
    {
      "type": "java.security.AlgorithmParametersSpi"
    },
    {
      "type": "java.security.KeyStoreSpi"
    },
    {
      "type": "java.security.interfaces.ECPrivateKey"
    },
    {
      "type": "java.security.interfaces.ECPublicKey"
    },
    {
      "type": "java.security.interfaces.RSAPrivateKey"
    },
    {
      "type": "java.security.interfaces.RSAPublicKey"
    },
    {
      "type": "java.sql.Date"
    },
    {
      "type": "java.text.NumberFormat"
    },
    {
      "type": "java.time.Duration"
    },
    {
      "type": "java.time.DurationEditor"
    },
    {
      "type": "java.time.Instant",
      "methods": [
        {
          "name": "getEpochSecond",
          "parameterTypes": []
        },
        {
          "name": "getNano",
          "parameterTypes": []
        },
        {
          "name": "now",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.util.AbstractMap",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.LinkedHashMap",
      "fields": [
        {
          "name": "Companion"
        }
      ]
    },
    {
      "type": "java.util.List"
    },
    {
      "type": "java.util.Map"
    },
    {
      "type": "java.util.Optional"
    },
    {
      "type": "java.util.SortedSet"
    },
    {
      "type": "java.util.concurrent.Executor"
    },
    {
      "type": "java.util.concurrent.ExecutorService",
      "methods": [
        {
          "name": "shutdown",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.util.concurrent.Executors$DelegatedScheduledExecutorService"
    },
    {
      "type": "java.util.concurrent.Future"
    },
    {
      "type": "java.util.concurrent.ScheduledExecutorService"
    },
    {
      "type": "java.util.concurrent.ThreadFactory"
    },
    {
      "type": "java.util.concurrent.atomic.LongAdder",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "add",
          "parameterTypes": [
            "long"
          ]
        }
      ]
    },
    {
      "type": "java.util.function.Consumer"
    },
    {
      "type": "java.util.logging.LogManager"
    },
    {
      "type": "javax.annotation.ManagedBean"
    },
    {
      "type": "javax.annotation.Nonnull"
    },
    {
      "type": "javax.annotation.Nullable"
    },
    {
      "type": "javax.annotation.PostConstruct"
    },
    {
      "type": "javax.annotation.PreDestroy"
    },
    {
      "type": "javax.annotation.Resource"
    },
    {
      "type": "javax.annotation.meta.TypeQualifier"
    },
    {
      "type": "javax.cache.Caching"
    },
    {
      "type": "javax.inject.Inject"
    },
    {
      "type": "javax.inject.Named"
    },
    {
      "type": "javax.inject.Qualifier"
    },
    {
      "type": "javax.money.MonetaryAmount"
    },
    {
      "type": "javax.naming.InitialContext"
    },
    {
      "type": "javax.naming.directory.InitialDirContext"
    },
    {
      "type": "javax.naming.ldap.LdapContext"
    },
    {
      "type": "javax.net.ssl.SSLContext",
      "fields": [
        {
          "name": "contextSpi"
        }
      ]
    },
    {
      "type": "javax.sql.DataSource"
    },
    {
      "type": "jdk.crac.management.CRaCMXBean"
    },
    {
      "type": "jdk.internal.loader.ClassLoaders$AppClassLoader"
    },
    {
      "type": "jdk.internal.loader.ClassLoaders$PlatformClassLoader"
    },
    {
      "type": "jdk.internal.misc.Unsafe",
      "methods": [
        {
          "name": "getUnsafe",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "kotlin.Any"
    },
    {
      "type": "kotlin.Array"
    },
    {
      "type": "kotlin.Boolean"
    },
    {
      "type": "kotlin.Deprecated"
    },
    {
      "type": "kotlin.Int"
    },
    {
      "type": "kotlin.Metadata",
      "methods": [
        {
          "name": "bv",
          "parameterTypes": []
        },
        {
          "name": "d1",
          "parameterTypes": []
        },
        {
          "name": "d2",
          "parameterTypes": []
        },
        {
          "name": "k",
          "parameterTypes": []
        },
        {
          "name": "mv",
          "parameterTypes": []
        },
        {
          "name": "pn",
          "parameterTypes": []
        },
        {
          "name": "xi",
          "parameterTypes": []
        },
        {
          "name": "xs",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "kotlin.ReplaceWith"
    },
    {
      "type": "kotlin.SafePublicationLazyImpl",
      "fields": [
        {
          "name": "_value"
        }
      ]
    },
    {
      "type": "kotlin.String"
    },
    {
      "type": "kotlin.Unit"
    },
    {
      "type": "kotlin.annotation.AnnotationRetention"
    },
    {
      "type": "kotlin.annotation.AnnotationTarget"
    },
    {
      "type": "kotlin.annotation.MustBeDocumented"
    },
    {
      "type": "kotlin.annotation.Retention"
    },
    {
      "type": "kotlin.annotation.Target",
      "methods": [
        {
          "name": "allowedTargets",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "kotlin.collections.List"
    },
    {
      "type": "kotlin.collections.Map"
    },
    {
      "type": "kotlin.collections.MutableMap"
    },
    {
      "type": "kotlin.coroutines.Continuation"
    },
    {
      "type": "kotlin.coroutines.jvm.internal.DebugMetadata"
    },
    {
      "type": "kotlin.jvm.JvmInline"
    },
    {
      "type": "kotlin.jvm.JvmStatic"
    },
    {
      "type": "kotlin.jvm.internal.DefaultConstructorMarker"
    },
    {
      "type": "kotlin.reflect.full.KClasses"
    },
    {
      "type": "kotlin.reflect.jvm.internal.ReflectionFactoryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "kotlin.reflect.jvm.internal.impl.load.java.ErasedOverridabilityCondition"
    },
    {
      "type": "kotlin.reflect.jvm.internal.impl.load.java.FieldOverridabilityCondition"
    },
    {
      "type": "kotlin.reflect.jvm.internal.impl.load.java.JavaIncompatibilityRulesOverridabilityCondition"
    },
    {
      "type": "kotlin.reflect.jvm.internal.impl.resolve.scopes.DescriptorKindFilter",
      "allPublicFields": true
    },
    {
      "type": "kotlinx.coroutines.AwaitAll",
      "fields": [
        {
          "name": "notCompletedCount$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.AwaitAll$AwaitAllNode",
      "fields": [
        {
          "name": "_disposer$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.CancellableContinuationImpl",
      "fields": [
        {
          "name": "_decisionAndIndex$volatile"
        },
        {
          "name": "_parentHandle$volatile"
        },
        {
          "name": "_state$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.CancelledContinuation",
      "fields": [
        {
          "name": "_resumed$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.CompletedExceptionally",
      "fields": [
        {
          "name": "_handled$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.CoroutineDispatcher"
    },
    {
      "type": "kotlinx.coroutines.CoroutineScope"
    },
    {
      "type": "kotlinx.coroutines.EventLoopImplBase",
      "fields": [
        {
          "name": "_delayed$volatile"
        },
        {
          "name": "_isCompleted$volatile"
        },
        {
          "name": "_queue$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.InvokeOnCancelling",
      "fields": [
        {
          "name": "_invoked$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.JobSupport",
      "fields": [
        {
          "name": "_parentHandle$volatile"
        },
        {
          "name": "_state$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.JobSupport$Finishing",
      "fields": [
        {
          "name": "_exceptionsHolder$volatile"
        },
        {
          "name": "_isCompleting$volatile"
        },
        {
          "name": "_rootCause$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.flow.Flow"
    },
    {
      "type": "kotlinx.coroutines.internal.AtomicOp",
      "fields": [
        {
          "name": "_consensus$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.internal.DispatchedContinuation",
      "fields": [
        {
          "name": "_reusableCancellableContinuation$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.internal.LimitedDispatcher",
      "fields": [
        {
          "name": "runningWorkers$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.internal.LockFreeLinkedListNode",
      "fields": [
        {
          "name": "_next$volatile"
        },
        {
          "name": "_prev$volatile"
        },
        {
          "name": "_removedRef$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.internal.LockFreeTaskQueue",
      "fields": [
        {
          "name": "_cur$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.internal.LockFreeTaskQueueCore",
      "fields": [
        {
          "name": "_next$volatile"
        },
        {
          "name": "_state$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.internal.ThreadSafeHeap",
      "fields": [
        {
          "name": "_size$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.reactor.MonoKt"
    },
    {
      "type": "kotlinx.coroutines.scheduling.CoroutineScheduler",
      "fields": [
        {
          "name": "_isTerminated$volatile"
        },
        {
          "name": "controlState$volatile"
        },
        {
          "name": "parkedWorkersStack$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.scheduling.CoroutineScheduler$Worker",
      "fields": [
        {
          "name": "workerCtl$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.scheduling.WorkQueue",
      "fields": [
        {
          "name": "blockingTasksInBuffer$volatile"
        },
        {
          "name": "consumerIndex$volatile"
        },
        {
          "name": "lastScheduledTask$volatile"
        },
        {
          "name": "producerIndex$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.io.RefCountingCopyTracker",
      "fields": [
        {
          "name": "copyCount"
        }
      ]
    },
    {
      "type": "kotlinx.io.Source"
    },
    {
      "type": "kotlinx.serialization.Serializable"
    },
    {
      "type": "kotlinx.serialization.cbor.Cbor"
    },
    {
      "type": "kotlinx.serialization.json.Json"
    },
    {
      "type": "kotlinx.serialization.protobuf.ProtoBuf"
    },
    {
      "type": "libcore.io.Memory"
    },
    {
      "type": "liquibase.change.DatabaseChange"
    },
    {
      "type": "nl.adaptivity.xmlutil.jdk.StAXStreamingFactory"
    },
    {
      "type": "nl.adaptivity.xmlutil.serialization.XmlElement"
    },
    {
      "type": "nl.adaptivity.xmlutil.serialization.XmlSerialName"
    },
    {
      "type": "org.apache.catalina.startup.Tomcat"
    },
    {
      "type": "org.apache.coyote.UpgradeProtocol"
    },
    {
      "type": "org.apache.jasper.compiler.JspConfig"
    },
    {
      "type": "org.apache.logging.log4j.core.impl.Log4jContextFactory"
    },
    {
      "type": "org.apache.logging.log4j.spi.ExtendedLogger"
    },
    {
      "type": "org.apache.logging.slf4j.SLF4JProvider"
    },
    {
      "type": "org.apache.pulsar.client.api.PulsarClient"
    },
    {
      "type": "org.apache.tomcat.websocket.server.WsHttpUpgradeHandler"
    },
    {
      "type": "org.apache.xerces.impl.dv.dtd.DTDDVFactoryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.xerces.jaxp.DocumentBuilderFactoryImpl"
    },
    {
      "type": "org.apache.xerces.parsers.XIncludeAwareParserConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.aspectj.weaver.Advice"
    },
    {
      "type": "org.cache2k.Cache2kBuilder"
    },
    {
      "type": "org.crac.Core"
    },
    {
      "type": "org.eclipse.core.runtime.FileLocator"
    },
    {
      "type": "org.eclipse.jetty.ee10.servlet.ServletHolder"
    },
    {
      "type": "org.eclipse.jetty.ee10.webapp.WebAppContext"
    },
    {
      "type": "org.eclipse.jetty.ee10.websocket.server.JettyWebSocketServerContainer"
    },
    {
      "type": "org.eclipse.jetty.server.Server"
    },
    {
      "type": "org.eclipse.jetty.util.Loader"
    },
    {
      "type": "org.eclipse.jetty.websocket.server.ServerWebSocketContainer"
    },
    {
      "type": "org.elasticsearch.client.RestClientBuilder"
    },
    {
      "type": "org.flywaydb.core.Flyway"
    },
    {
      "type": "org.glassfish.jersey.servlet.ServletContainer"
    },
    {
      "type": "org.h2.server.web.JakartaWebServlet"
    },
    {
      "type": "org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager"
    },
    {
      "type": "org.jboss.logging.Logger"
    },
    {
      "type": "org.jooq.DSLContext"
    },
    {
      "type": "org.neo4j.driver.Driver"
    },
    {
      "type": "org.quartz.Scheduler"
    },
    {
      "type": "org.reactivestreams.Publisher"
    },
    {
      "type": "org.robolectric.Robolectric"
    },
    {
      "type": "org.slf4j.Logger"
    },
    {
      "type": "org.slf4j.bridge.SLF4JBridgeHandler"
    },
    {
      "type": "org.slf4j.spi.LocationAwareLogger"
    },
    {
      "type": "org.springframework.aop.framework.AopInfrastructureBean"
    },
    {
      "type": "org.springframework.aop.framework.ProxyConfig",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setProxyTargetClass",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.aop.framework.ProxyProcessorSupport",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setOrder",
          "parameterTypes": [
            "int"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.aot.generate.Generated"
    },
    {
      "type": "org.springframework.batch.core.launch.JobLauncher"
    },
    {
      "type": "org.springframework.beans.factory.Aware"
    },
    {
      "type": "org.springframework.beans.factory.BeanClassLoaderAware"
    },
    {
      "type": "org.springframework.beans.factory.BeanFactoryAware"
    },
    {
      "type": "org.springframework.beans.factory.BeanNameAware"
    },
    {
      "type": "org.springframework.beans.factory.DisposableBean"
    },
    {
      "type": "org.springframework.beans.factory.FactoryBean"
    },
    {
      "type": "org.springframework.beans.factory.InitializingBean"
    },
    {
      "type": "org.springframework.beans.factory.ObjectProvider"
    },
    {
      "type": "org.springframework.beans.factory.annotation.Autowired"
    },
    {
      "type": "org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.beans.factory.annotation.Qualifier"
    },
    {
      "type": "org.springframework.beans.factory.annotation.Value"
    },
    {
      "type": "org.springframework.beans.factory.aot.BeanFactoryInitializationAotProcessor"
    },
    {
      "type": "org.springframework.beans.factory.aot.BeanRegistrationAotProcessor"
    },
    {
      "type": "org.springframework.beans.factory.config.BeanFactoryPostProcessor"
    },
    {
      "type": "org.springframework.beans.factory.config.BeanPostProcessor"
    },
    {
      "type": "org.springframework.beans.factory.config.ConfigurableBeanFactory"
    },
    {
      "type": "org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor"
    },
    {
      "type": "org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor"
    },
    {
      "type": "org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor"
    },
    {
      "type": "org.springframework.beans.factory.support.NullBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.ApplicationProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.ClearCachesApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.SpringBootConfiguration"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.graphql.GraphQlObservationAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.ansi.AnsiOutput$Enabled"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationExcludeFilter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationImportSelector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationImportSelector$AutoConfigurationGroup",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationPackage"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String[]"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigureAfter"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigureBefore"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigureOrder"
    },
    {
      "type": "org.springframework.boot.autoconfigure.BackgroundPreinitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.EnableAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.ImportAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.SpringBootApplication"
    },
    {
      "type": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "forceAutoProxyCreatorToUseClassProxying",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "applicationAvailability",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheConfigurationImportSelector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheType"
    },
    {
      "type": "org.springframework.boot.autoconfigure.codec.CodecProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionEvaluationReportAutoConfigurationImportListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnBean"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnBooleanProperty"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnClass"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnJava"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnNotWarDeployment"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnProperty"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnResource"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnThreading"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication$Type"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnBeanCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnClassCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnJavaCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnPropertyCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnResourceCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnThreadingCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnWarDeploymentCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.SearchStrategy"
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "defaultLifecycleProcessor",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.context.LifecycleProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.LifecycleProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration$ResourceBundleCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "propertySourcesPlaceholderConfigurer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializerDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.graphql.ConditionalOnGraphQlSchema"
    },
    {
      "type": "org.springframework.boot.autoconfigure.graphql.DefaultGraphQlSchemaCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.graphql.GraphQlAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.beans.factory.ListableBeanFactory"
          ]
        },
        {
          "name": "annotatedControllerConfigurer",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "annotatedControllerConfigurerDataFetcherExceptionResolver",
          "parameterTypes": [
            "org.springframework.graphql.data.method.annotation.support.AnnotatedControllerConfigurer"
          ]
        },
        {
          "name": "batchLoaderRegistry",
          "parameterTypes": []
        },
        {
          "name": "executionGraphQlService",
          "parameterTypes": [
            "org.springframework.graphql.execution.GraphQlSource",
            "org.springframework.graphql.execution.BatchLoaderRegistry"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.graphql.GraphQlAutoConfiguration$GraphQlResourcesRuntimeHints"
    },
    {
      "type": "org.springframework.boot.autoconfigure.graphql.GraphQlCorsProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.graphql.GraphQlProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getGraphiql",
          "parameterTypes": []
        },
        {
          "name": "getSchema",
          "parameterTypes": []
        },
        {
          "name": "getWebsocket",
          "parameterTypes": []
        },
        {
          "name": "setPath",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.graphql.GraphQlProperties$Graphiql",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setEnabled",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setPath",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.graphql.GraphQlProperties$Schema",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getInspection",
          "parameterTypes": []
        },
        {
          "name": "getIntrospection",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.graphql.GraphQlProperties$Schema$Inspection",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setEnabled",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.graphql.GraphQlProperties$Schema$Introspection",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setEnabled",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.graphql.GraphQlProperties$Websocket",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setConnectionInitTimeout",
          "parameterTypes": [
            "java.time.Duration"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.graphql.GraphQlSourceBuilderCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.graphql.reactive.GraphQlWebFluxAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "graphQlHttpHandler",
          "parameterTypes": [
            "org.springframework.graphql.server.WebGraphQlHandler"
          ]
        },
        {
          "name": "graphQlRouterFunction",
          "parameterTypes": [
            "org.springframework.graphql.server.webflux.GraphQlHttpHandler",
            "org.springframework.graphql.server.webflux.GraphQlSseHandler",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.boot.autoconfigure.graphql.GraphQlProperties"
          ]
        },
        {
          "name": "graphQlSseHandler",
          "parameterTypes": [
            "org.springframework.graphql.server.WebGraphQlHandler",
            "org.springframework.boot.autoconfigure.graphql.GraphQlProperties"
          ]
        },
        {
          "name": "webGraphQlHandler",
          "parameterTypes": [
            "org.springframework.graphql.ExecutionGraphQlService",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.graphql.reactive.GraphQlWebFluxAutoConfiguration$GraphQlEndpointCorsConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.graphql.GraphQlProperties",
            "org.springframework.boot.autoconfigure.graphql.GraphQlCorsProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.graphql.reactive.GraphQlWebFluxAutoConfiguration$GraphiQlResourceHints"
    },
    {
      "type": "org.springframework.boot.autoconfigure.graphql.security.GraphQlWebMvcSecurityAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "gson",
          "parameterTypes": [
            "com.google.gson.GsonBuilder"
          ]
        },
        {
          "name": "gsonBuilder",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "standardGsonBuilderCustomizer",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.gson.GsonProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration$StandardGsonBuilderCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.gson.GsonBuilderCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.gson.GsonProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.client.AbstractHttpClientProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.client.NotReactiveWebApplicationCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.client.reactive.AbstractClientHttpConnectorProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.client.reactive.ClientHttpConnectorAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.boot.autoconfigure.http.client.reactive.HttpReactiveClientProperties"
          ]
        },
        {
          "name": "clientHttpConnectorBuilder",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "clientHttpConnectorSettings",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.client.reactive.ClientHttpConnectorAutoConfiguration$ReactorNetty",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.client.reactive.ClientHttpConnectorBuilderCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.client.reactive.HttpReactiveClientProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$DefaultCodecsConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "defaultCodecCustomizer",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.codec.CodecProperties",
            "org.springframework.boot.autoconfigure.http.codec.HttpCodecsProperties",
            "org.springframework.core.env.Environment"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$DefaultCodecsConfiguration$DefaultCodecCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$JacksonCodecConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "jacksonCodecCustomizer",
          "parameterTypes": [
            "com.fasterxml.jackson.databind.ObjectMapper"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.codec.HttpCodecsProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.info.ProjectInfoProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration$GitResourceAvailableCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.integration.IntegrationPropertiesEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "jsonComponentModule",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "standardJacksonObjectMapperBuilderCustomizer",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "jsonMixinModule",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.boot.jackson.JsonMixinModuleEntries"
          ]
        },
        {
          "name": "jsonMixinModuleEntries",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "jacksonObjectMapperBuilder",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "jacksonObjectMapper",
          "parameterTypes": [
            "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "parameterNamesModule",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.netty.NettyProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.netty.NettyProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.reactor.ReactorProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.reactor.ReactorProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyConfigurations$ReactorResourceFactoryConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "reactorResourceFactory",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.R2dbcInitializationConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration$SqlInitializationModeCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.FileWatcher",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.core.io.ResourceLoader",
            "org.springframework.boot.autoconfigure.ssl.SslProperties"
          ]
        },
        {
          "name": "fileWatcher",
          "parameterTypes": []
        },
        {
          "name": "sslBundleRegistry",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "sslPropertiesSslBundleRegistrar",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.ssl.FileWatcher"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslBundleRegistrar"
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$AsyncConfigurerConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "applicationTaskExecutorAsyncConfigurer",
          "parameterTypes": [
            "org.springframework.beans.factory.BeanFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$AsyncConfigurerConfiguration$1",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$BootstrapExecutorConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "bootstrapExecutorAliasPostProcessor",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$OnExecutorCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "simpleAsyncTaskExecutorBuilder",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "applicationTaskExecutor",
          "parameterTypes": [
            "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "threadPoolTaskExecutorBuilder",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "simpleAsyncTaskSchedulerBuilder",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "threadPoolTaskSchedulerBuilder",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.thread.Threading"
    },
    {
      "type": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ConditionalOnEnabledResourceChain"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.OnEnabledResourceChainCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getCompression",
          "parameterTypes": []
        },
        {
          "name": "setPort",
          "parameterTypes": [
            "java.lang.Integer"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebResourcesRuntimeHints"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.NotReactiveWebApplicationCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.NotReactiveWebApplicationOrVirtualThreadsExecutorEnabledCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$NettyWebServerFactoryCustomizerConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "nettyWebServerFactoryCustomizer",
          "parameterTypes": [
            "org.springframework.core.env.Environment",
            "org.springframework.boot.autoconfigure.web.ServerProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.embedded.NettyWebServerFactoryCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.format.WebConversionService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration$AnnotationConfig",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext"
          ]
        },
        {
          "name": "httpHandler",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "defaultPartHttpMessageReaderCustomizer",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "reactiveWebServerFactoryCustomizer",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.ServerProperties",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedJetty"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedNetty",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "nettyReactiveWebServerFactory",
          "parameterTypes": [
            "org.springframework.http.client.ReactorResourceFactory",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedTomcat"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedUndertow"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$EnableWebFluxConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
            "org.springframework.boot.autoconfigure.web.WebProperties",
            "org.springframework.boot.autoconfigure.web.ServerProperties",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "localeContextResolver",
          "parameterTypes": []
        },
        {
          "name": "webFluxConversionService",
          "parameterTypes": []
        },
        {
          "name": "webFluxValidator",
          "parameterTypes": []
        },
        {
          "name": "webSessionManager",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WebFluxConfig",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.core.env.Environment",
            "org.springframework.boot.autoconfigure.web.WebProperties",
            "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
            "org.springframework.beans.factory.ListableBeanFactory",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WelcomePageConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "welcomePageRouterFunctionMapping",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
            "org.springframework.boot.autoconfigure.web.WebProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.WebSessionIdResolverAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.ServerProperties",
            "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties"
          ]
        },
        {
          "name": "webSessionIdResolver",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.error.DefaultErrorWebExceptionHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.error.ErrorWebFluxAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.ServerProperties"
          ]
        },
        {
          "name": "errorAttributes",
          "parameterTypes": []
        },
        {
          "name": "errorWebExceptionHandler",
          "parameterTypes": [
            "org.springframework.boot.web.reactive.error.ErrorAttributes",
            "org.springframework.boot.autoconfigure.web.WebProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.http.codec.ServerCodecConfigurer",
            "org.springframework.context.ApplicationContext"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.AutoConfiguredWebClientSsl",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration$ReactorNetty",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "reactorNettyHttpClientMapperClientHttpConnectorBuilderCustomizer",
          "parameterTypes": [
            "org.springframework.http.client.ReactorResourceFactory",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "webClientSsl",
          "parameterTypes": [
            "org.springframework.boot.http.client.reactive.ClientHttpConnectorBuilder",
            "org.springframework.boot.http.client.reactive.ClientHttpConnectorSettings",
            "org.springframework.boot.ssl.SslBundles"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration$WebClientCodecsConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "exchangeStrategiesCustomizer",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientCodecCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientSsl"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.availability.ApplicationAvailability"
    },
    {
      "type": "org.springframework.boot.availability.ApplicationAvailabilityBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.builder.ParentContextCloserApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.logging.DeferredLogFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.ContextIdApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.FileEncodingApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.TypeExcludeFilter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.AnsiOutputApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.logging.DeferredLogFactory",
            "org.springframework.boot.ConfigurableBootstrapContext"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.ConfigDataNotFoundAction"
    },
    {
      "type": "org.springframework.boot.context.config.ConfigDataProperties",
      "fields": [
        {
          "name": "this$0"
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.core.io.ResourceLoader"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.StandardConfigDataLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.StandardConfigDataLocationResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.logging.DeferredLogFactory",
            "org.springframework.boot.context.properties.bind.Binder",
            "org.springframework.core.io.ResourceLoader"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.SystemEnvironmentConfigDataLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.SystemEnvironmentConfigDataLocationResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.event.EventPublishingRunListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.SpringApplication",
            "java.lang.String[]"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.logging.LoggingApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.BoundConfigurationProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.ConfigurationProperties"
    },
    {
      "type": "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$ConfigurationPropertiesBinderFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.DeprecatedConfigurationProperty"
    },
    {
      "type": "org.springframework.boot.context.properties.EnableConfigurationProperties"
    },
    {
      "type": "org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.NestedConfigurationProperty"
    },
    {
      "type": "org.springframework.boot.context.properties.bind.DefaultValue",
      "methods": [
        {
          "name": "value",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.bind.Name"
    },
    {
      "type": "org.springframework.boot.context.properties.bind.Nested"
    },
    {
      "type": "org.springframework.boot.convert.DurationUnit"
    },
    {
      "type": "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.PropertiesPropertySourceLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.logging.DeferredLogFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.YamlPropertySourceLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.flyway.FlywayDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.http.client.reactive.AbstractClientHttpConnectorBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.http.client.reactive.ClientHttpConnectorBuilder"
    },
    {
      "type": "org.springframework.boot.http.client.reactive.ClientHttpConnectorSettings",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.http.client.reactive.ReactorClientHttpConnectorBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.io.Base64ProtocolResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.io.ClassPathResourceFilePathResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.io.ProtocolResolverApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.jackson.JsonComponentModule",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.jackson.JsonMixinModule",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.jackson.JsonMixinModuleEntries",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.liquibase.LiquibaseDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.loader.launch.LaunchedClassLoader"
    },
    {
      "type": "org.springframework.boot.logging.java.JavaLoggingSystem$Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem$Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.logback.LogbackLoggingSystem$Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.logback.RootLogLevelConfigurator"
    },
    {
      "type": "org.springframework.boot.orm.jpa.JpaDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.core.env.Environment"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.r2dbc.init.R2dbcScriptDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.reactor.ReactorEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.ssl.DefaultSslBundleRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.ssl.SslBundleRegistry"
    },
    {
      "type": "org.springframework.boot.ssl.SslBundles"
    },
    {
      "type": "org.springframework.boot.system.JavaVersion"
    },
    {
      "type": "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory"
    },
    {
      "type": "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
      "methods": [
        {
          "name": "byAnnotation",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.codec.CodecCustomizer"
    },
    {
      "type": "org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.embedded.netty.NettyReactiveWebServerFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.reactive.context.FilteredReactiveWebContextResourceFilePathResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContextFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.reactive.error.DefaultErrorAttributes",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.reactive.error.ErrorAttributes"
    },
    {
      "type": "org.springframework.boot.web.reactive.error.ErrorWebExceptionHandler"
    },
    {
      "type": "org.springframework.boot.web.reactive.function.client.WebClientCustomizer"
    },
    {
      "type": "org.springframework.boot.web.reactive.server.AbstractReactiveWebServerFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.reactive.server.ConfigurableReactiveWebServerFactory"
    },
    {
      "type": "org.springframework.boot.web.reactive.server.ReactiveWebServerFactory"
    },
    {
      "type": "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.server.Compression",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setEnabled",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setMimeTypes",
          "parameterTypes": [
            "java.lang.String[]"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.server.ConfigurableWebServerFactory"
    },
    {
      "type": "org.springframework.boot.web.server.WebServerFactoryCustomizer"
    },
    {
      "type": "org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.servlet.context.ServletContextResourceFilePathResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContextFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cache.Cache"
    },
    {
      "type": "org.springframework.cache.CacheManager"
    },
    {
      "type": "org.springframework.cache.caffeine.CaffeineCacheManager"
    },
    {
      "type": "org.springframework.cache.interceptor.CacheAspectSupport"
    },
    {
      "type": "org.springframework.context.ApplicationContext"
    },
    {
      "type": "org.springframework.context.ApplicationContextAware"
    },
    {
      "type": "org.springframework.context.ApplicationListener"
    },
    {
      "type": "org.springframework.context.ApplicationStartupAware"
    },
    {
      "type": "org.springframework.context.EmbeddedValueResolverAware"
    },
    {
      "type": "org.springframework.context.EnvironmentAware"
    },
    {
      "type": "org.springframework.context.LifecycleProcessor"
    },
    {
      "type": "org.springframework.context.ResourceLoaderAware"
    },
    {
      "type": "org.springframework.context.SmartLifecycle"
    },
    {
      "type": "org.springframework.context.annotation.AnnotationScopeMetadataResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.annotation.Bean"
    },
    {
      "type": "org.springframework.context.annotation.CommonAnnotationBeanPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.annotation.ComponentScan"
    },
    {
      "type": "org.springframework.context.annotation.ComponentScan$Filter"
    },
    {
      "type": "org.springframework.context.annotation.Conditional"
    },
    {
      "type": "org.springframework.context.annotation.Configuration"
    },
    {
      "type": "org.springframework.context.annotation.ConfigurationClassEnhancer$EnhancedConfiguration"
    },
    {
      "type": "org.springframework.context.annotation.ConfigurationClassPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setMetadataReaderFactory",
          "parameterTypes": [
            "org.springframework.core.type.classreading.MetadataReaderFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.context.annotation.Import"
    },
    {
      "type": "org.springframework.context.annotation.ImportRuntimeHints"
    },
    {
      "type": "org.springframework.context.annotation.Lazy"
    },
    {
      "type": "org.springframework.context.annotation.Primary"
    },
    {
      "type": "org.springframework.context.annotation.Scope"
    },
    {
      "type": "org.springframework.context.event.DefaultEventListenerFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.event.EventListenerMethodProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.support.ApplicationObjectSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.context.support.DefaultLifecycleProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
    },
    {
      "type": "org.springframework.core.Ordered"
    },
    {
      "type": "org.springframework.core.PriorityOrdered"
    },
    {
      "type": "org.springframework.core.ReactiveAdapterRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.annotation.AliasFor"
    },
    {
      "type": "org.springframework.core.annotation.Order"
    },
    {
      "type": "org.springframework.core.convert.support.ConfigurableConversionService"
    },
    {
      "type": "org.springframework.core.convert.support.GenericConversionService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.env.Environment"
    },
    {
      "type": "org.springframework.core.task.AsyncListenableTaskExecutor"
    },
    {
      "type": "org.springframework.core.task.AsyncTaskExecutor"
    },
    {
      "type": "org.springframework.core.type.classreading.MetadataReaderFactory"
    },
    {
      "type": "org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"
    },
    {
      "type": "org.springframework.data.cassandra.ReactiveSession"
    },
    {
      "type": "org.springframework.data.domain.ScrollPosition"
    },
    {
      "type": "org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate"
    },
    {
      "type": "org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient"
    },
    {
      "type": "org.springframework.data.elasticsearch.repository.ElasticsearchRepository"
    },
    {
      "type": "org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration"
    },
    {
      "type": "org.springframework.data.jpa.repository.JpaRepository"
    },
    {
      "type": "org.springframework.data.ldap.repository.LdapRepository"
    },
    {
      "type": "org.springframework.data.projection.SpelAwareProxyProjectionFactory"
    },
    {
      "type": "org.springframework.data.r2dbc.core.R2dbcEntityTemplate"
    },
    {
      "type": "org.springframework.data.redis.connection.ReactiveRedisConnectionFactory"
    },
    {
      "type": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    {
      "type": "org.springframework.data.redis.core.RedisOperations"
    },
    {
      "type": "org.springframework.data.redis.repository.configuration.EnableRedisRepositories"
    },
    {
      "type": "org.springframework.data.repository.query.QueryByExampleExecutor"
    },
    {
      "type": "org.springframework.data.repository.query.ReactiveQueryByExampleExecutor"
    },
    {
      "type": "org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration"
    },
    {
      "type": "org.springframework.data.web.PageableHandlerMethodArgumentResolver"
    },
    {
      "type": "org.springframework.format.FormatterRegistry"
    },
    {
      "type": "org.springframework.format.support.DefaultFormattingConversionService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.format.support.FormattingConversionService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.graphql.ExecutionGraphQlService"
    },
    {
      "type": "org.springframework.graphql.GraphQlRequest"
    },
    {
      "type": "org.springframework.graphql.data.method.annotation.support.AnnotatedControllerConfigurer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.graphql.data.method.annotation.support.AnnotatedControllerDetectionSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.graphql.data.method.annotation.support.AnnotatedControllerExceptionResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.graphql.data.method.annotation.support.HandlerDataFetcherExceptionResolver"
    },
    {
      "type": "org.springframework.graphql.execution.BatchLoaderRegistry"
    },
    {
      "type": "org.springframework.graphql.execution.DataFetcherExceptionResolver"
    },
    {
      "type": "org.springframework.graphql.execution.DefaultBatchLoaderRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.graphql.execution.DefaultExecutionGraphQlService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.graphql.execution.GraphQlContextAccessor"
    },
    {
      "type": "org.springframework.graphql.execution.GraphQlSource"
    },
    {
      "type": "org.springframework.graphql.execution.RuntimeWiringConfigurer"
    },
    {
      "type": "org.springframework.graphql.execution.SchemaReport"
    },
    {
      "type": "org.springframework.graphql.execution.SecurityContextThreadLocalAccessor"
    },
    {
      "type": "org.springframework.graphql.execution.SubscriptionExceptionResolver"
    },
    {
      "type": "org.springframework.graphql.server.DefaultWebGraphQlHandlerBuilder$1",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.graphql.server.WebGraphQlHandler"
    },
    {
      "type": "org.springframework.graphql.server.WebGraphQlInterceptor"
    },
    {
      "type": "org.springframework.graphql.server.support.SerializableGraphQlRequest",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setOperationName",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setQuery",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setVariables",
          "parameterTypes": [
            "java.util.Map"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.graphql.server.webflux.AbstractGraphQlHttpHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.graphql.server.webflux.GraphQlHttpHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.graphql.server.webflux.GraphQlSseHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.graphql.server.webmvc.GraphQlHttpHandler"
    },
    {
      "type": "org.springframework.hateoas.EntityModel"
    },
    {
      "type": "org.springframework.http.ReactiveHttpInputMessage"
    },
    {
      "type": "org.springframework.http.client.ClientHttpRequestFactory"
    },
    {
      "type": "org.springframework.http.client.ReactorResourceFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.client.reactive.ClientHttpConnector"
    },
    {
      "type": "org.springframework.http.codec.ClientCodecConfigurer"
    },
    {
      "type": "org.springframework.http.codec.CodecConfigurer"
    },
    {
      "type": "org.springframework.http.codec.ServerCodecConfigurer"
    },
    {
      "type": "org.springframework.http.codec.multipart.DefaultPartHttpMessageReader"
    },
    {
      "type": "org.springframework.http.codec.support.BaseCodecConfigurer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.codec.support.DefaultClientCodecConfigurer"
    },
    {
      "type": "org.springframework.http.codec.support.DefaultServerCodecConfigurer",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.http.converter.HttpMessageConverter"
    },
    {
      "type": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.server.reactive.HttpHandler"
    },
    {
      "type": "org.springframework.integration.config.EnableIntegration"
    },
    {
      "type": "org.springframework.jdbc.core.JdbcTemplate"
    },
    {
      "type": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate"
    },
    {
      "type": "org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType"
    },
    {
      "type": "org.springframework.jdbc.datasource.init.DatabasePopulator"
    },
    {
      "type": "org.springframework.jms.core.JmsTemplate"
    },
    {
      "type": "org.springframework.jmx.export.MBeanExporter"
    },
    {
      "type": "org.springframework.kafka.core.KafkaTemplate"
    },
    {
      "type": "org.springframework.ldap.core.ContextSource"
    },
    {
      "type": "org.springframework.mail.javamail.JavaMailSenderImpl"
    },
    {
      "type": "org.springframework.mock.web.MockHttpServletRequest"
    },
    {
      "type": "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
    },
    {
      "type": "org.springframework.oxm.Marshaller"
    },
    {
      "type": "org.springframework.r2dbc.connection.R2dbcTransactionManager"
    },
    {
      "type": "org.springframework.r2dbc.connection.init.DatabasePopulator"
    },
    {
      "type": "org.springframework.scheduling.SchedulingTaskExecutor"
    },
    {
      "type": "org.springframework.scheduling.annotation.AsyncConfigurer"
    },
    {
      "type": "org.springframework.scheduling.concurrent.CustomizableThreadFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.scheduling.concurrent.ExecutorConfigurationSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"
    },
    {
      "type": "org.springframework.security.access.AccessDeniedException"
    },
    {
      "type": "org.springframework.security.authentication.AuthenticationManager"
    },
    {
      "type": "org.springframework.security.authentication.DefaultAuthenticationEventPublisher"
    },
    {
      "type": "org.springframework.security.authentication.ReactiveAuthenticationManager"
    },
    {
      "type": "org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"
    },
    {
      "type": "org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity"
    },
    {
      "type": "org.springframework.security.config.http.SessionCreationPolicy"
    },
    {
      "type": "org.springframework.security.core.context.SecurityContext"
    },
    {
      "type": "org.springframework.security.oauth2.client.registration.ClientRegistration"
    },
    {
      "type": "org.springframework.security.oauth2.server.authorization.OAuth2Authorization"
    },
    {
      "type": "org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken"
    },
    {
      "type": "org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor"
    },
    {
      "type": "org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository"
    },
    {
      "type": "org.springframework.session.Session"
    },
    {
      "type": "org.springframework.stereotype.Component"
    },
    {
      "type": "org.springframework.stereotype.Indexed"
    },
    {
      "type": "org.springframework.transaction.PlatformTransactionManager"
    },
    {
      "type": "org.springframework.util.CustomizableThreadCreator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.validation.Validator"
    },
    {
      "type": "org.springframework.web.client.RestClient"
    },
    {
      "type": "org.springframework.web.client.RestClientException"
    },
    {
      "type": "org.springframework.web.client.RestTemplate"
    },
    {
      "type": "org.springframework.web.context.support.GenericWebApplicationContext"
    },
    {
      "type": "org.springframework.web.context.support.ServletContextResource"
    },
    {
      "type": "org.springframework.web.cors.reactive.PreFlightRequestHandler"
    },
    {
      "type": "org.springframework.web.filter.CharacterEncodingFilter"
    },
    {
      "type": "org.springframework.web.filter.reactive.ServerWebExchangeContextFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.BindingContext",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.DispatchExceptionHandler"
    },
    {
      "type": "org.springframework.web.reactive.DispatcherHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.HandlerAdapter"
    },
    {
      "type": "org.springframework.web.reactive.HandlerMapping"
    },
    {
      "type": "org.springframework.web.reactive.HandlerResult"
    },
    {
      "type": "org.springframework.web.reactive.HandlerResultHandler"
    },
    {
      "type": "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
    },
    {
      "type": "org.springframework.web.reactive.config.DelegatingWebFluxConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setConfigurers",
          "parameterTypes": [
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.web.reactive.config.WebFluxConfigurationSupport",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "handlerFunctionAdapter",
          "parameterTypes": []
        },
        {
          "name": "requestMappingHandlerAdapter",
          "parameterTypes": [
            "org.springframework.core.ReactiveAdapterRegistry",
            "org.springframework.http.codec.ServerCodecConfigurer",
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.web.reactive.accept.RequestedContentTypeResolver",
            "org.springframework.validation.Validator"
          ]
        },
        {
          "name": "requestMappingHandlerMapping",
          "parameterTypes": [
            "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
          ]
        },
        {
          "name": "resourceHandlerMapping",
          "parameterTypes": [
            "org.springframework.web.reactive.resource.ResourceUrlProvider"
          ]
        },
        {
          "name": "resourceUrlProvider",
          "parameterTypes": []
        },
        {
          "name": "responseBodyResultHandler",
          "parameterTypes": [
            "org.springframework.core.ReactiveAdapterRegistry",
            "org.springframework.http.codec.ServerCodecConfigurer",
            "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
          ]
        },
        {
          "name": "responseEntityResultHandler",
          "parameterTypes": [
            "org.springframework.core.ReactiveAdapterRegistry",
            "org.springframework.http.codec.ServerCodecConfigurer",
            "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
          ]
        },
        {
          "name": "responseStatusExceptionHandler",
          "parameterTypes": []
        },
        {
          "name": "routerFunctionMapping",
          "parameterTypes": [
            "org.springframework.http.codec.ServerCodecConfigurer"
          ]
        },
        {
          "name": "serverCodecConfigurer",
          "parameterTypes": []
        },
        {
          "name": "serverResponseResultHandler",
          "parameterTypes": [
            "org.springframework.http.codec.ServerCodecConfigurer"
          ]
        },
        {
          "name": "simpleHandlerAdapter",
          "parameterTypes": []
        },
        {
          "name": "viewResolutionResultHandler",
          "parameterTypes": [
            "org.springframework.core.ReactiveAdapterRegistry",
            "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
          ]
        },
        {
          "name": "webFluxAdapterRegistry",
          "parameterTypes": []
        },
        {
          "name": "webFluxContentTypeResolver",
          "parameterTypes": []
        },
        {
          "name": "webFluxWebSocketHandlerAdapter",
          "parameterTypes": []
        },
        {
          "name": "webHandler",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.web.reactive.config.WebFluxConfigurationSupport$NoOpValidator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.config.WebFluxConfigurer"
    },
    {
      "type": "org.springframework.web.reactive.function.client.WebClient"
    },
    {
      "type": "org.springframework.web.reactive.function.client.WebClientException"
    },
    {
      "type": "org.springframework.web.reactive.function.server.HandlerFunction"
    },
    {
      "type": "org.springframework.web.reactive.function.server.RouterFunction"
    },
    {
      "type": "org.springframework.web.reactive.function.server.RouterFunctionBuilder$BuiltRouterFunction",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.function.server.RouterFunctions$AbstractRouterFunction",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.function.server.ServerRequest"
    },
    {
      "type": "org.springframework.web.reactive.function.server.support.HandlerFunctionAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.function.server.support.RouterFunctionMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.function.server.support.ServerResponseResultHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.handler.AbstractHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.handler.AbstractUrlHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.handler.SimpleUrlHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.handler.WebFluxResponseStatusExceptionHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.resource.ResourceUrlProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.result.HandlerResultHandlerSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.result.SimpleHandlerAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping$PreFlightAmbiguousMatchHandler"
    },
    {
      "type": "org.springframework.web.reactive.result.method.RequestMappingInfoHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.result.method.RequestMappingInfoHandlerMapping$HttpOptionsHandler"
    },
    {
      "type": "org.springframework.web.reactive.result.method.annotation.AbstractMessageWriterResultHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.result.method.annotation.ResponseBodyResultHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.result.method.annotation.ResponseEntityResultHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.result.view.ViewResolutionResultHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.socket.server.support.WebSocketHandlerAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.server.WebExceptionHandler"
    },
    {
      "type": "org.springframework.web.server.WebFilter"
    },
    {
      "type": "org.springframework.web.server.WebHandler"
    },
    {
      "type": "org.springframework.web.server.adapter.HttpWebHandlerAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.server.handler.ResponseStatusExceptionHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.server.handler.WebHandlerDecorator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.server.i18n.AcceptHeaderLocaleContextResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.server.i18n.LocaleContextResolver"
    },
    {
      "type": "org.springframework.web.server.session.CookieWebSessionIdResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.server.session.DefaultWebSessionManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.server.session.WebSessionIdResolver"
    },
    {
      "type": "org.springframework.web.server.session.WebSessionManager"
    },
    {
      "type": "org.springframework.web.servlet.DispatcherServlet"
    },
    {
      "type": "org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer"
    },
    {
      "type": "org.springframework.ws.transport.http.MessageDispatcherServlet"
    },
    {
      "type": "org.thymeleaf.spring6.SpringTemplateEngine"
    },
    {
      "type": "org.webjars.WebJarAssetLocator"
    },
    {
      "type": "org.webjars.WebJarVersionLocator"
    },
    {
      "type": "org.xnio.SslClientAuthMode"
    },
    {
      "type": "reactor.core.publisher.Flux"
    },
    {
      "type": "reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber",
      "fields": [
        {
          "name": "requested"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber",
      "fields": [
        {
          "name": "error"
        },
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber",
      "fields": [
        {
          "name": "fallbackValue"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxDoFinally$DoFinallySubscriber",
      "fields": [
        {
          "name": "once"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxFirstWithSignal$RaceCoordinator",
      "fields": [
        {
          "name": "winner"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxIterable$IterableSubscription",
      "fields": [
        {
          "name": "requested"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber",
      "fields": [
        {
          "name": "requested"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxTakeUntilOther$TakeUntilMainSubscriber",
      "fields": [
        {
          "name": "main"
        },
        {
          "name": "other"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber",
      "fields": [
        {
          "name": "index"
        },
        {
          "name": "timeout"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber",
      "fields": [
        {
          "name": "s"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.Hooks"
    },
    {
      "type": "reactor.core.publisher.LambdaMonoSubscriber",
      "fields": [
        {
          "name": "subscription"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.Mono"
    },
    {
      "type": "reactor.core.publisher.MonoCacheTime",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.MonoCallable$MonoCallableSubscription",
      "fields": [
        {
          "name": "requestedOnce"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.MonoCompletionStage$MonoCompletionStageSubscription",
      "fields": [
        {
          "name": "requestedOnce"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.MonoCreate$DefaultMonoSink",
      "fields": [
        {
          "name": "disposable"
        },
        {
          "name": "requestConsumer"
        },
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.MonoDelay$MonoDelayRunnable",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.MonoFlatMap$FlatMapMain",
      "fields": [
        {
          "name": "second"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.MonoNext$NextSubscriber",
      "fields": [
        {
          "name": "wip"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.MonoWhen$WhenCoordinator",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.MonoWhen$WhenInner",
      "fields": [
        {
          "name": "s"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.Operators$BaseFluxToMonoOperator",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.Operators$DeferredSubscription",
      "fields": [
        {
          "name": "requested"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.Operators$MonoInnerProducerBase",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.Operators$MultiSubscriptionSubscriber",
      "fields": [
        {
          "name": "missedProduced"
        },
        {
          "name": "missedRequested"
        },
        {
          "name": "missedSubscription"
        },
        {
          "name": "wip"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.Operators$ScalarSubscription",
      "fields": [
        {
          "name": "once"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.SinkEmptyMulticast",
      "fields": [
        {
          "name": "subscribers"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.SinksSpecs$AbstractSerializedSink",
      "fields": [
        {
          "name": "lockedAt"
        },
        {
          "name": "wip"
        }
      ]
    },
    {
      "type": "reactor.core.scheduler.BoundedElasticScheduler",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.core.scheduler.BoundedElasticScheduler$BoundedServices",
      "fields": [
        {
          "name": "busyStates"
        }
      ]
    },
    {
      "type": "reactor.core.scheduler.BoundedElasticScheduler$BoundedState",
      "fields": [
        {
          "name": "markCount"
        }
      ]
    },
    {
      "type": "reactor.core.scheduler.ParallelScheduler",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.core.scheduler.SchedulerTask",
      "fields": [
        {
          "name": "future"
        },
        {
          "name": "parent"
        }
      ]
    },
    {
      "type": "reactor.netty.channel.ChannelOperations",
      "fields": [
        {
          "name": "outboundSubscription"
        }
      ]
    },
    {
      "type": "reactor.netty.channel.ChannelOperationsHandler"
    },
    {
      "type": "reactor.netty.channel.FluxReceive",
      "fields": [
        {
          "name": "receiverCancel"
        }
      ]
    },
    {
      "type": "reactor.netty.contextpropagation.ChannelContextAccessor"
    },
    {
      "type": "reactor.netty.http.Cookies",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.netty.http.HttpOperations",
      "fields": [
        {
          "name": "statusAndHeadersSent"
        }
      ]
    },
    {
      "type": "reactor.netty.http.client.HttpClient"
    },
    {
      "type": "reactor.netty.http.server.HttpServer"
    },
    {
      "type": "reactor.netty.http.server.HttpServerResponse"
    },
    {
      "type": "reactor.netty.http.server.HttpTrafficHandler"
    },
    {
      "type": "reactor.netty.http.server.SimpleCompressionHandler"
    },
    {
      "type": "reactor.netty.transport.ServerTransport$Acceptor"
    },
    {
      "type": "reactor.netty.transport.ServerTransport$AcceptorInitializer"
    },
    {
      "type": "reactor.netty.transport.TransportConfig$TransportChannelInitializer"
    },
    {
      "type": "reactor.netty.transport.TransportConnector$MonoChannelPromise",
      "fields": [
        {
          "name": "result"
        }
      ]
    },
    {
      "type": "reactor.netty5.http.server.HttpServerResponse"
    },
    {
      "type": "reactor.tools.agent.ReactorDebugAgent"
    },
    {
      "type": "reactor.util.context.ReactorContextAccessor"
    },
    {
      "type": "sun.misc.Unsafe",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "invokeCleaner",
          "parameterTypes": [
            "java.nio.ByteBuffer"
          ]
        }
      ]
    },
    {
      "type": "sun.misc.VM"
    },
    {
      "type": "sun.nio.ch.SelectorImpl",
      "fields": [
        {
          "name": "publicSelectedKeys"
        },
        {
          "name": "selectedKeys"
        }
      ]
    },
    {
      "type": "sun.security.pkcs12.PKCS12KeyStore",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.DSA$SHA224withDSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.DSA$SHA256withDSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.JavaKeyStore$DualFormatJKS",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.JavaKeyStore$JKS",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.NativePRNG",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.security.SecureRandomParameters"
          ]
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA2$SHA224",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA2$SHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA5$SHA384",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA5$SHA512",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.X509Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.certpath.PKIXCertPathValidator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.PSSParameters",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.RSAKeyFactory$Legacy",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.RSAPSSSignature",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.RSASignature$SHA224withRSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.RSASignature$SHA256withRSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.RSASignature$SHA384withRSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.ssl.KeyManagerFactoryImpl$SunX509",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.ssl.SSLContextImpl",
      "fields": [
        {
          "name": "trustManager"
        }
      ]
    },
    {
      "type": "sun.security.ssl.SSLContextImpl$AbstractTLSContext",
      "fields": [
        {
          "name": "trustManager"
        }
      ]
    },
    {
      "type": "sun.security.ssl.SSLContextImpl$CustomizedTLSContext",
      "fields": [
        {
          "name": "trustManager"
        }
      ]
    },
    {
      "type": "sun.security.ssl.SSLContextImpl$DefaultSSLContext",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.ssl.SSLContextImpl$TLSContext",
      "fields": [
        {
          "name": "trustManager"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.x509.AuthorityInfoAccessExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.AuthorityKeyIdentifierExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.BasicConstraintsExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.CRLDistributionPointsExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.CertificatePoliciesExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.ExtendedKeyUsageExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.IssuerAlternativeNameExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.KeyUsageExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.NetscapeCertTypeExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.PrivateKeyUsageExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.SubjectAlternativeNameExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.SubjectKeyIdentifierExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": {
        "proxy": [
          "com.netflix.graphql.dgs.InputArgument"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "java.lang.reflect.ParameterizedType",
          "org.springframework.core.SerializableTypeWrapper$SerializableTypeProxy",
          "java.io.Serializable"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "java.lang.reflect.TypeVariable",
          "org.springframework.core.SerializableTypeWrapper$SerializableTypeProxy",
          "java.io.Serializable"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "java.lang.reflect.WildcardType",
          "org.springframework.core.SerializableTypeWrapper$SerializableTypeProxy",
          "java.io.Serializable"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.boot.context.properties.ConfigurationProperties"
        ]
      }
    }
  ],
  "resources": [
    {
      "glob": "META-INF/build-info.properties"
    },
    {
      "glob": "META-INF/io.netty.versions.properties"
    },
    {
      "glob": "META-INF/native/libio_grpc_netty_shaded_netty_tcnative_osx_aarch_64.dylib"
    },
    {
      "glob": "META-INF/native/libio_grpc_netty_shaded_netty_tcnative_osx_aarch_64.jnilib"
    },
    {
      "glob": "META-INF/resources/index.html"
    },
    {
      "glob": "META-INF/schema"
    },
    {
      "glob": "META-INF/services/ch.qos.logback.classic.spi.Configurator"
    },
    {
      "glob": "META-INF/services/com.google.auth.http.HttpTransportFactory"
    },
    {
      "glob": "META-INF/services/com.google.cloud.firestore.FirestoreFactory"
    },
    {
      "glob": "META-INF/services/com.google.cloud.firestore.FirestoreRpcFactory"
    },
    {
      "glob": "META-INF/services/com.google.cloud.grpc.GrpcTransportOptions$ExecutorFactory"
    },
    {
      "glob": "META-INF/services/io.grpc.LoadBalancerProvider"
    },
    {
      "glob": "META-INF/services/io.grpc.ManagedChannelProvider"
    },
    {
      "glob": "META-INF/services/io.grpc.NameResolverProvider"
    },
    {
      "glob": "META-INF/services/io.ktor.serialization.kotlinx.KotlinxSerializationExtensionProvider"
    },
    {
      "glob": "META-INF/services/io.micrometer.context.ContextAccessor"
    },
    {
      "glob": "META-INF/services/io.micrometer.context.ThreadLocalAccessor"
    },
    {
      "glob": "META-INF/services/io.opentelemetry.context.ContextStorageProvider"
    },
    {
      "glob": "META-INF/services/java.lang.System$LoggerFinder"
    },
    {
      "glob": "META-INF/services/java.net.spi.InetAddressResolverProvider"
    },
    {
      "glob": "META-INF/services/java.net.spi.URLStreamHandlerProvider"
    },
    {
      "glob": "META-INF/services/java.nio.channels.spi.SelectorProvider"
    },
    {
      "glob": "META-INF/services/java.time.zone.ZoneRulesProvider"
    },
    {
      "glob": "META-INF/services/java.util.spi.ResourceBundleControlProvider"
    },
    {
      "glob": "META-INF/services/javax.xml.parsers.DocumentBuilderFactory"
    },
    {
      "glob": "META-INF/services/javax.xml.stream.XMLInputFactory"
    },
    {
      "glob": "META-INF/services/kotlin.reflect.jvm.internal.impl.resolve.ExternalOverridabilityCondition"
    },
    {
      "glob": "META-INF/services/kotlin.reflect.jvm.internal.impl.util.ModuleVisibilityHelper"
    },
    {
      "glob": "META-INF/services/nl.adaptivity.xmlutil.XmlStreamingFactory"
    },
    {
      "glob": "META-INF/services/org.apache.xerces.xni.parser.XMLParserConfiguration"
    },
    {
      "glob": "META-INF/services/org.slf4j.spi.SLF4JServiceProvider"
    },
    {
      "glob": "META-INF/spring-autoconfigure-metadata.properties"
    },
    {
      "glob": "META-INF/spring.components"
    },
    {
      "glob": "META-INF/spring.factories"
    },
    {
      "glob": "META-INF/spring.integration.properties"
    },
    {
      "glob": "META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports"
    },
    {
      "glob": "META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.replacements"
    },
    {
      "glob": "application-default.properties"
    },
    {
      "glob": "application-default.xml"
    },
    {
      "glob": "application-default.yaml"
    },
    {
      "glob": "application-default.yml"
    },
    {
      "glob": "application.properties"
    },
    {
      "glob": "application.xml"
    },
    {
      "glob": "application.yaml"
    },
    {
      "glob": "application.yml"
    },
    {
      "glob": "banner.txt"
    },
    {
      "glob": "com/google/api/client/http/google-http-client.properties"
    },
    {
      "glob": "com/google/auth/oauth2/google-auth-library.properties"
    },
    {
      "glob": "com/netflix/graphql/dgs/DgsComponent.class"
    },
    {
      "glob": "com/netflix/graphql/dgs/DgsScalar.class"
    },
    {
      "glob": "com/netflix/graphql/dgs/apq/DgsAPQSupportAutoConfiguration.class"
    },
    {
      "glob": "com/netflix/graphql/dgs/autoconfig/DgsInputArgumentConfiguration.class"
    },
    {
      "glob": "com/netflix/graphql/dgs/springgraphql/autoconfig/DgsSpringGraphQLAutoConfiguration$Companion.class"
    },
    {
      "glob": "com/netflix/graphql/dgs/springgraphql/autoconfig/DgsSpringGraphQLAutoConfiguration$DgsRuntimeWiringConfigurerBridge.class"
    },
    {
      "glob": "com/netflix/graphql/dgs/springgraphql/autoconfig/DgsSpringGraphQLAutoConfiguration$DgsTypeDefinitionConfigurerBridge.class"
    },
    {
      "glob": "com/netflix/graphql/dgs/springgraphql/autoconfig/DgsSpringGraphQLAutoConfiguration$ReactiveConfiguration.class"
    },
    {
      "glob": "com/netflix/graphql/dgs/springgraphql/autoconfig/DgsSpringGraphQLAutoConfiguration$WebFluxArgumentHandlerConfiguration$Dgs.class"
    },
    {
      "glob": "com/netflix/graphql/dgs/springgraphql/autoconfig/DgsSpringGraphQLAutoConfiguration$WebFluxArgumentHandlerConfiguration.class"
    },
    {
      "glob": "com/netflix/graphql/dgs/springgraphql/autoconfig/DgsSpringGraphQLAutoConfiguration$WebFluxConfiguration.class"
    },
    {
      "glob": "com/netflix/graphql/dgs/springgraphql/autoconfig/DgsSpringGraphQLAutoConfiguration$WebMvcArgumentHandlerConfiguration.class"
    },
    {
      "glob": "com/netflix/graphql/dgs/springgraphql/autoconfig/DgsSpringGraphQLAutoConfiguration$WebMvcConfiguration.class"
    },
    {
      "glob": "com/netflix/graphql/dgs/springgraphql/autoconfig/DgsSpringGraphQLAutoConfiguration.class"
    },
    {
      "glob": "config/application-default.properties"
    },
    {
      "glob": "config/application-default.xml"
    },
    {
      "glob": "config/application-default.yaml"
    },
    {
      "glob": "config/application-default.yml"
    },
    {
      "glob": "config/application.properties"
    },
    {
      "glob": "config/application.xml"
    },
    {
      "glob": "config/application.yaml"
    },
    {
      "glob": "config/application.yml"
    },
    {
      "glob": "definitions_fed2_0.graphqls"
    },
    {
      "glob": "dependencies.properties"
    },
    {
      "glob": "git.properties"
    },
    {
      "glob": "graphql"
    },
    {
      "glob": "graphql/schema/Coercing.class"
    },
    {
      "glob": "i18n/Parsing.properties"
    },
    {
      "glob": "i18n/Parsing_en.properties"
    },
    {
      "glob": "i18n/Parsing_en_AU.properties"
    },
    {
      "glob": "i18n/Parsing_en_GB.properties"
    },
    {
      "glob": "i18n/Validation.properties"
    },
    {
      "glob": "i18n/Validation_en.properties"
    },
    {
      "glob": "i18n/Validation_en_AU.properties"
    },
    {
      "glob": "i18n/Validation_en_GB.properties"
    },
    {
      "glob": "io/github/reactivecircus/kstreamlined/backend"
    },
    {
      "glob": "io/github/reactivecircus/kstreamlined/backend/KSConfiguration.class"
    },
    {
      "glob": "io/github/reactivecircus/kstreamlined/backend/datafetcher/FeedEntryDataFetcher.class"
    },
    {
      "glob": "io/github/reactivecircus/kstreamlined/backend/datafetcher/FeedSourceDataFetcher$WhenMappings.class"
    },
    {
      "glob": "io/github/reactivecircus/kstreamlined/backend/datafetcher/FeedSourceDataFetcher.class"
    },
    {
      "glob": "io/github/reactivecircus/kstreamlined/backend/datafetcher/KotlinWeeklyIssueDataFetcher.class"
    },
    {
      "glob": "io/github/reactivecircus/kstreamlined/backend/datafetcher/scalar/InstantScalar.class"
    },
    {
      "glob": "jndi.properties"
    },
    {
      "glob": "kotlin/Metadata.class"
    },
    {
      "glob": "kotlin/annotation/MustBeDocumented.class"
    },
    {
      "glob": "kotlin/annotation/Retention.class"
    },
    {
      "glob": "kotlin/annotation/Target.class"
    },
    {
      "glob": "logback-spring.groovy"
    },
    {
      "glob": "logback-spring.xml"
    },
    {
      "glob": "logback-test-spring.groovy"
    },
    {
      "glob": "logback-test-spring.xml"
    },
    {
      "glob": "logback-test.groovy"
    },
    {
      "glob": "logback-test.scmo"
    },
    {
      "glob": "logback-test.xml"
    },
    {
      "glob": "logback.groovy"
    },
    {
      "glob": "logback.scmo"
    },
    {
      "glob": "logback.xml"
    },
    {
      "glob": "messages.properties"
    },
    {
      "glob": "org/springframework/beans/factory/Aware.class"
    },
    {
      "glob": "org/springframework/beans/factory/BeanClassLoaderAware.class"
    },
    {
      "glob": "org/springframework/beans/factory/BeanFactoryAware.class"
    },
    {
      "glob": "org/springframework/beans/factory/annotation/Qualifier.class"
    },
    {
      "glob": "org/springframework/beans/factory/config/BeanFactoryPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics$CompositeMeterRegistryAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/CompositeMeterRegistryAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/AbstractDependsOnBeanFactoryPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/AutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/AutoConfigurationImportSelector.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/AutoConfigureAfter.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/AutoConfigureBefore.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/AutoConfigureOrder.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/ImportAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/ImportAutoConfigurationImportSelector.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/admin/SpringApplicationAdminJmxAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/aop/AopAutoConfiguration$AspectJAutoProxyingConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/aop/AopAutoConfiguration$ClassProxyingConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/aop/AopAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/availability/ApplicationAvailabilityAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration$CacheConfigurationImportSelector.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration$CacheManagerEntityManagerFactoryDependsOnPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration$CacheManagerValidator.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/GenericCacheConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/NoOpCacheConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/SimpleCacheConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnBean.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnBooleanProperty.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnClass.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnMissingBean.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnMissingClass.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnNotWarDeployment.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnWebApplication.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/context/ConfigurationPropertiesAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/context/LifecycleAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/context/MessageSourceAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/context/PropertyPlaceholderAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/graphql/ConditionalOnGraphQlSchema.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/graphql/GraphQlAutoConfiguration$GraphQlDataAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/graphql/GraphQlAutoConfiguration$GraphQlResourcesRuntimeHints.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/graphql/GraphQlAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/graphql/reactive/GraphQlWebFluxAutoConfiguration$GraphQlEndpointCorsConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/graphql/reactive/GraphQlWebFluxAutoConfiguration$GraphiQlResourceHints.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/graphql/reactive/GraphQlWebFluxAutoConfiguration$WebSocketConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/graphql/reactive/GraphQlWebFluxAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/graphql/servlet/GraphQlWebMvcAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/gson/GsonAutoConfiguration$StandardGsonBuilderCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/gson/GsonAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition$ReactiveWebApplication.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/client/HttpClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/client/NotReactiveWebApplicationCondition$ReactiveWebApplication.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/client/NotReactiveWebApplicationCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/client/reactive/ClientHttpConnectorAutoConfiguration$ReactorNetty.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/client/reactive/ClientHttpConnectorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/codec/CodecsAutoConfiguration$DefaultCodecsConfiguration$DefaultCodecCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/codec/CodecsAutoConfiguration$DefaultCodecsConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/codec/CodecsAutoConfiguration$JacksonCodecConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/codec/CodecsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/info/ProjectInfoAutoConfiguration$GitResourceAvailableCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/info/ProjectInfoAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonAutoConfigurationRuntimeHints.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonMixinConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonObjectMapperConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$ParameterNamesModuleConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jmx/JmxAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/netty/NettyAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/orm/jpa/EntityManagerFactoryDependsOnPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/reactor/ReactorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/reactor/netty/ReactorNettyConfigurations$ReactorResourceFactoryConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/sql/init/R2dbcInitializationConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/sql/init/SqlInitializationAutoConfiguration$SqlInitializationModeCondition$ModeIsNever.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/sql/init/SqlInitializationAutoConfiguration$SqlInitializationModeCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/sql/init/SqlInitializationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/ssl/SslAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutionAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$AsyncConfigurerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$BootstrapExecutorConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$OnExecutorCondition$ExecutorBeanCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$OnExecutorCondition$ModelCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$OnExecutorCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$TaskExecutorConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskSchedulingAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskSchedulingConfigurations$TaskSchedulerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/NotReactiveWebApplicationCondition$ReactiveWebApplication.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/NotReactiveWebApplicationCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/NotReactiveWebApplicationOrVirtualThreadsExecutorEnabledCondition$NotReactiveWebApplication.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/NotReactiveWebApplicationOrVirtualThreadsExecutorEnabledCondition$VirtualThreadsExecutorEnabled.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/NotReactiveWebApplicationOrVirtualThreadsExecutorEnabledCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/RestClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/RestTemplateAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/embedded/EmbeddedWebServerFactoryCustomizerAutoConfiguration$JettyWebServerFactoryCustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/embedded/EmbeddedWebServerFactoryCustomizerAutoConfiguration$NettyWebServerFactoryCustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/embedded/EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/embedded/EmbeddedWebServerFactoryCustomizerAutoConfiguration$UndertowWebServerFactoryCustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/embedded/EmbeddedWebServerFactoryCustomizerAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/HttpHandlerAutoConfiguration$AnnotationConfig.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/HttpHandlerAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/ReactiveMultipartAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryConfiguration$EmbeddedJetty.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryConfiguration$EmbeddedNetty.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryConfiguration$EmbeddedTomcat.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryConfiguration$EmbeddedUndertow.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration$EnableWebFluxConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration$MaxIdleTimeInMemoryWebSessionStore.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration$ProblemDetailsErrorHandlingConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration$ResourceChainCustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration$WebFluxConfig.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration$WelcomePageConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/WebSessionIdResolverAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/error/ErrorWebFluxAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/function/client/ClientHttpConnectorAutoConfiguration$ReactorNetty.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/function/client/ClientHttpConnectorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/function/client/WebClientAutoConfiguration$WebClientCodecsConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/function/client/WebClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/websocket/servlet/WebSocketMessagingAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/context/properties/EnableConfigurationProperties.class"
    },
    {
      "glob": "org/springframework/boot/context/properties/EnableConfigurationPropertiesRegistrar.class"
    },
    {
      "glob": "org/springframework/boot/sql/init/dependency/DatabaseInitializationDependencyConfigurer.class"
    },
    {
      "glob": "org/springframework/context/ApplicationContextAware.class"
    },
    {
      "glob": "org/springframework/context/annotation/Conditional.class"
    },
    {
      "glob": "org/springframework/context/annotation/Configuration.class"
    },
    {
      "glob": "org/springframework/context/annotation/DeferredImportSelector.class"
    },
    {
      "glob": "org/springframework/context/annotation/Import.class"
    },
    {
      "glob": "org/springframework/context/annotation/ImportBeanDefinitionRegistrar.class"
    },
    {
      "glob": "org/springframework/context/annotation/ImportRuntimeHints.class"
    },
    {
      "glob": "org/springframework/core/Ordered.class"
    },
    {
      "glob": "org/springframework/core/annotation/Order.class"
    },
    {
      "glob": "org/springframework/http/codec/CodecConfigurer.properties"
    },
    {
      "glob": "org/springframework/web/reactive/config/DelegatingWebFluxConfiguration.class"
    },
    {
      "glob": "org/springframework/web/reactive/config/WebFluxConfigurationSupport$EmptyHandlerMapping.class"
    },
    {
      "glob": "org/springframework/web/reactive/config/WebFluxConfigurationSupport$NoOpValidator.class"
    },
    {
      "glob": "org/springframework/web/reactive/config/WebFluxConfigurationSupport$NoUpgradeStrategyWebSocketService.class"
    },
    {
      "glob": "org/springframework/web/reactive/config/WebFluxConfigurationSupport.class"
    },
    {
      "glob": "org/springframework/web/reactive/config/WebFluxConfigurer.class"
    },
    {
      "glob": "public/index.html"
    },
    {
      "glob": "resources/index.html"
    },
    {
      "glob": "schema"
    },
    {
      "glob": "spring.properties"
    },
    {
      "glob": "static/index.html"
    },
    {
      "module": "java.base",
      "glob": "jdk/internal/icu/impl/data/icudt76b/nfc.nrm"
    },
    {
      "module": "java.base",
      "glob": "jdk/internal/icu/impl/data/icudt76b/nfkc.nrm"
    },
    {
      "module": "java.base",
      "glob": "jdk/internal/icu/impl/data/icudt76b/uprops.icu"
    },
    {
      "module": "java.base",
      "glob": "sun/net/idn/uidna.spp"
    },
    {
      "module": "java.xml",
      "glob": "jdk/xml/internal/jdkcatalog/JDKCatalog.xml"
    }
  ],
  "bundles": [
    {
      "name": "i18n.Parsing",
      "locales": [
        "en-AU",
        "en-GB"
      ]
    },
    {
      "name": "i18n.Validation",
      "locales": [
        "en-GB"
      ]
    }
  ],
  "jni": [
    {
      "type": "[B"
    },
    {
      "type": "[Ljava.lang.String;"
    },
    {
      "type": "[[B"
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.handler.ssl.OpenSslClientSessionCache"
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.handler.ssl.OpenSslSessionCache",
      "methods": [
        {
          "name": "getSession",
          "parameterTypes": [
            "long",
            "byte[]"
          ]
        },
        {
          "name": "sessionCreated",
          "parameterTypes": [
            "long",
            "long"
          ]
        }
      ]
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$ExtendedTrustManagerVerifyCallback"
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslContext$AbstractCertificateVerifier",
      "methods": [
        {
          "name": "verify",
          "parameterTypes": [
            "long",
            "byte[][]",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.internal.tcnative.Buffer"
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.internal.tcnative.CertificateCallbackTask",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "byte[]",
            "byte[][]",
            "io.grpc.netty.shaded.io.netty.internal.tcnative.CertificateCallback"
          ]
        }
      ]
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.internal.tcnative.CertificateVerifierTask",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "byte[][]",
            "java.lang.String",
            "io.grpc.netty.shaded.io.netty.internal.tcnative.CertificateVerifier"
          ]
        }
      ]
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.internal.tcnative.Library"
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.internal.tcnative.NativeStaticallyReferencedJniMethods"
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.internal.tcnative.SSL"
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.internal.tcnative.SSLContext"
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.internal.tcnative.SSLPrivateKeyMethodDecryptTask",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "byte[]",
            "io.grpc.netty.shaded.io.netty.internal.tcnative.AsyncSSLPrivateKeyMethod"
          ]
        }
      ]
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.internal.tcnative.SSLPrivateKeyMethodSignTask",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "int",
            "byte[]",
            "io.grpc.netty.shaded.io.netty.internal.tcnative.AsyncSSLPrivateKeyMethod"
          ]
        }
      ]
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.internal.tcnative.SSLPrivateKeyMethodTask",
      "fields": [
        {
          "name": "resultBytes"
        }
      ]
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.internal.tcnative.SSLSession"
    },
    {
      "type": "io.grpc.netty.shaded.io.netty.internal.tcnative.SSLTask",
      "fields": [
        {
          "name": "complete"
        },
        {
          "name": "returnValue"
        }
      ]
    },
    {
      "type": "java.lang.Boolean",
      "methods": [
        {
          "name": "getBoolean",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.lang.Exception"
    },
    {
      "type": "java.lang.IllegalArgumentException"
    },
    {
      "type": "java.lang.NullPointerException"
    },
    {
      "type": "java.lang.OutOfMemoryError"
    },
    {
      "type": "java.lang.String",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "byte[]"
          ]
        },
        {
          "name": "getBytes",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.management.VMManagementImpl",
      "fields": [
        {
          "name": "compTimeMonitoringSupport"
        },
        {
          "name": "currentThreadCpuTimeSupport"
        },
        {
          "name": "objectMonitorUsageSupport"
        },
        {
          "name": "otherThreadCpuTimeSupport"
        },
        {
          "name": "remoteDiagnosticCommandsSupport"
        },
        {
          "name": "synchronizerUsageSupport"
        },
        {
          "name": "threadAllocatedMemorySupport"
        },
        {
          "name": "threadContentionMonitoringSupport"
        }
      ]
    }
  ]
}